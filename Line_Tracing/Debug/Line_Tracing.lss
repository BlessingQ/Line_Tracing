
Line_Tracing.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000018a  00800100  0000105e  000010f2  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000105e  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000004b  0080028a  0080028a  0000127c  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  0000127c  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000012d8  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000148  00000000  00000000  00001318  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000221e  00000000  00000000  00001460  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000fa7  00000000  00000000  0000367e  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000c5a  00000000  00000000  00004625  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000002e0  00000000  00000000  00005280  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000a21  00000000  00000000  00005560  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000ab9  00000000  00000000  00005f81  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000f8  00000000  00000000  00006a3a  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	46 c0       	rjmp	.+140    	; 0x8e <__ctors_end>
       2:	00 00       	nop
       4:	6b c0       	rjmp	.+214    	; 0xdc <__bad_interrupt>
       6:	00 00       	nop
       8:	69 c0       	rjmp	.+210    	; 0xdc <__bad_interrupt>
       a:	00 00       	nop
       c:	67 c0       	rjmp	.+206    	; 0xdc <__bad_interrupt>
       e:	00 00       	nop
      10:	65 c0       	rjmp	.+202    	; 0xdc <__bad_interrupt>
      12:	00 00       	nop
      14:	63 c0       	rjmp	.+198    	; 0xdc <__bad_interrupt>
      16:	00 00       	nop
      18:	61 c0       	rjmp	.+194    	; 0xdc <__bad_interrupt>
      1a:	00 00       	nop
      1c:	5f c0       	rjmp	.+190    	; 0xdc <__bad_interrupt>
      1e:	00 00       	nop
      20:	5d c0       	rjmp	.+186    	; 0xdc <__bad_interrupt>
      22:	00 00       	nop
      24:	5b c0       	rjmp	.+182    	; 0xdc <__bad_interrupt>
      26:	00 00       	nop
      28:	59 c0       	rjmp	.+178    	; 0xdc <__bad_interrupt>
      2a:	00 00       	nop
      2c:	57 c0       	rjmp	.+174    	; 0xdc <__bad_interrupt>
      2e:	00 00       	nop
      30:	55 c0       	rjmp	.+170    	; 0xdc <__bad_interrupt>
      32:	00 00       	nop
      34:	53 c0       	rjmp	.+166    	; 0xdc <__bad_interrupt>
      36:	00 00       	nop
      38:	51 c0       	rjmp	.+162    	; 0xdc <__bad_interrupt>
      3a:	00 00       	nop
      3c:	bc c0       	rjmp	.+376    	; 0x1b6 <__vector_15>
      3e:	00 00       	nop
      40:	4d c0       	rjmp	.+154    	; 0xdc <__bad_interrupt>
      42:	00 00       	nop
      44:	4b c0       	rjmp	.+150    	; 0xdc <__bad_interrupt>
      46:	00 00       	nop
      48:	49 c0       	rjmp	.+146    	; 0xdc <__bad_interrupt>
      4a:	00 00       	nop
      4c:	47 c0       	rjmp	.+142    	; 0xdc <__bad_interrupt>
      4e:	00 00       	nop
      50:	45 c0       	rjmp	.+138    	; 0xdc <__bad_interrupt>
      52:	00 00       	nop
      54:	43 c0       	rjmp	.+134    	; 0xdc <__bad_interrupt>
      56:	00 00       	nop
      58:	41 c0       	rjmp	.+130    	; 0xdc <__bad_interrupt>
      5a:	00 00       	nop
      5c:	3f c0       	rjmp	.+126    	; 0xdc <__bad_interrupt>
      5e:	00 00       	nop
      60:	3d c0       	rjmp	.+122    	; 0xdc <__bad_interrupt>
      62:	00 00       	nop
      64:	3b c0       	rjmp	.+118    	; 0xdc <__bad_interrupt>
      66:	00 00       	nop
      68:	39 c0       	rjmp	.+114    	; 0xdc <__bad_interrupt>
      6a:	00 00       	nop
      6c:	37 c0       	rjmp	.+110    	; 0xdc <__bad_interrupt>
      6e:	00 00       	nop
      70:	35 c0       	rjmp	.+106    	; 0xdc <__bad_interrupt>
      72:	00 00       	nop
      74:	33 c0       	rjmp	.+102    	; 0xdc <__bad_interrupt>
      76:	00 00       	nop
      78:	31 c0       	rjmp	.+98     	; 0xdc <__bad_interrupt>
      7a:	00 00       	nop
      7c:	2f c0       	rjmp	.+94     	; 0xdc <__bad_interrupt>
      7e:	00 00       	nop
      80:	2d c0       	rjmp	.+90     	; 0xdc <__bad_interrupt>
      82:	00 00       	nop
      84:	2b c0       	rjmp	.+86     	; 0xdc <__bad_interrupt>
      86:	00 00       	nop
      88:	29 c0       	rjmp	.+82     	; 0xdc <__bad_interrupt>
	...

0000008c <__ctors_start>:
      8c:	d8 02       	muls	r29, r24

0000008e <__ctors_end>:
      8e:	11 24       	eor	r1, r1
      90:	1f be       	out	0x3f, r1	; 63
      92:	cf ef       	ldi	r28, 0xFF	; 255
      94:	d0 e1       	ldi	r29, 0x10	; 16
      96:	de bf       	out	0x3e, r29	; 62
      98:	cd bf       	out	0x3d, r28	; 61

0000009a <__do_copy_data>:
      9a:	12 e0       	ldi	r17, 0x02	; 2
      9c:	a0 e0       	ldi	r26, 0x00	; 0
      9e:	b1 e0       	ldi	r27, 0x01	; 1
      a0:	ee e5       	ldi	r30, 0x5E	; 94
      a2:	f0 e1       	ldi	r31, 0x10	; 16
      a4:	00 e0       	ldi	r16, 0x00	; 0
      a6:	0b bf       	out	0x3b, r16	; 59
      a8:	02 c0       	rjmp	.+4      	; 0xae <__do_copy_data+0x14>
      aa:	07 90       	elpm	r0, Z+
      ac:	0d 92       	st	X+, r0
      ae:	aa 38       	cpi	r26, 0x8A	; 138
      b0:	b1 07       	cpc	r27, r17
      b2:	d9 f7       	brne	.-10     	; 0xaa <__do_copy_data+0x10>

000000b4 <__do_clear_bss>:
      b4:	22 e0       	ldi	r18, 0x02	; 2
      b6:	aa e8       	ldi	r26, 0x8A	; 138
      b8:	b2 e0       	ldi	r27, 0x02	; 2
      ba:	01 c0       	rjmp	.+2      	; 0xbe <.do_clear_bss_start>

000000bc <.do_clear_bss_loop>:
      bc:	1d 92       	st	X+, r1

000000be <.do_clear_bss_start>:
      be:	a5 3d       	cpi	r26, 0xD5	; 213
      c0:	b2 07       	cpc	r27, r18
      c2:	e1 f7       	brne	.-8      	; 0xbc <.do_clear_bss_loop>

000000c4 <__do_global_ctors>:
      c4:	10 e0       	ldi	r17, 0x00	; 0
      c6:	c7 e4       	ldi	r28, 0x47	; 71
      c8:	d0 e0       	ldi	r29, 0x00	; 0
      ca:	03 c0       	rjmp	.+6      	; 0xd2 <__do_global_ctors+0xe>
      cc:	21 97       	sbiw	r28, 0x01	; 1
      ce:	fe 01       	movw	r30, r28
      d0:	e0 d4       	rcall	.+2496   	; 0xa92 <__tablejump2__>
      d2:	c6 34       	cpi	r28, 0x46	; 70
      d4:	d1 07       	cpc	r29, r17
      d6:	d1 f7       	brne	.-12     	; 0xcc <__do_global_ctors+0x8>
      d8:	ee d0       	rcall	.+476    	; 0x2b6 <main>
      da:	bf c7       	rjmp	.+3966   	; 0x105a <_exit>

000000dc <__bad_interrupt>:
      dc:	91 cf       	rjmp	.-222    	; 0x0 <__vectors>

000000de <_ZN7BAT_ADCC1Eh>:


#include "Bat_adc.h"


BAT_ADC::BAT_ADC(uint8_t sec)
      de:	fc 01       	movw	r30, r24
      e0:	11 82       	std	Z+1, r1	; 0x01
      e2:	10 82       	st	Z, r1
{
	ISR_Sec = sec; 
      e4:	62 83       	std	Z+2, r22	; 0x02
	
	ADMUX |= (1<<REFS0) | (1<<MUX2) |(1<<MUX1) |(1<<MUX0);   //ADC PF7번 하나 사용
      e6:	87 b1       	in	r24, 0x07	; 7
      e8:	87 64       	ori	r24, 0x47	; 71
      ea:	87 b9       	out	0x07, r24	; 7
	ADCSRA |= (1<<ADEN) | (1<<ADSC) | (1<<ADFR) | (1<<ADPS2) | (1<<ADPS1) | (1<<ADPS0);  
      ec:	86 b1       	in	r24, 0x06	; 6
      ee:	87 6e       	ori	r24, 0xE7	; 231
      f0:	86 b9       	out	0x06, r24	; 6
	
	
	TCCR0 |= 0x0c; //(1<<CS02) | (1<<CS01);
      f2:	83 b7       	in	r24, 0x33	; 51
      f4:	8c 60       	ori	r24, 0x0C	; 12
      f6:	83 bf       	out	0x33, r24	; 51
	TIMSK |= (1<<TOIE0) |(1<<OCIE0);
      f8:	87 b7       	in	r24, 0x37	; 55
      fa:	83 60       	ori	r24, 0x03	; 3
      fc:	87 bf       	out	0x37, r24	; 55
	OCR0 = 249;
      fe:	89 ef       	ldi	r24, 0xF9	; 249
     100:	81 bf       	out	0x31, r24	; 49
	
	sei();
     102:	78 94       	sei
     104:	08 95       	ret

00000106 <_ZN7BAT_ADC10Bat_statusEv>:
}

int BAT_ADC::Bat_status(void)
{
     106:	cf 93       	push	r28
     108:	df 93       	push	r29
     10a:	ec 01       	movw	r28, r24

bat_val = ADCW;             // 배터리 전압 읽어들임
     10c:	64 b1       	in	r22, 0x04	; 4
     10e:	75 b1       	in	r23, 0x05	; 5
     110:	7c 83       	std	Y+4, r23	; 0x04
     112:	6b 83       	std	Y+3, r22	; 0x03
f=(float)bat_val*5.0/1023.0;
     114:	07 2e       	mov	r0, r23
     116:	00 0c       	add	r0, r0
     118:	88 0b       	sbc	r24, r24
     11a:	99 0b       	sbc	r25, r25
     11c:	cb d3       	rcall	.+1942   	; 0x8b4 <__floatsisf>
     11e:	20 e0       	ldi	r18, 0x00	; 0
     120:	30 e0       	ldi	r19, 0x00	; 0
     122:	40 ea       	ldi	r20, 0xA0	; 160
     124:	50 e4       	ldi	r21, 0x40	; 64
     126:	52 d4       	rcall	.+2212   	; 0x9cc <__mulsf3>
     128:	20 e0       	ldi	r18, 0x00	; 0
     12a:	30 ec       	ldi	r19, 0xC0	; 192
     12c:	4f e7       	ldi	r20, 0x7F	; 127
     12e:	54 e4       	ldi	r21, 0x44	; 68
     130:	26 d3       	rcall	.+1612   	; 0x77e <__divsf3>
     132:	6d 83       	std	Y+5, r22	; 0x05
     134:	7e 83       	std	Y+6, r23	; 0x06
     136:	8f 83       	std	Y+7, r24	; 0x07
     138:	98 87       	std	Y+8, r25	; 0x08
vin = f / (4700.0/ (22000.0+4700.0) );
     13a:	23 e3       	ldi	r18, 0x33	; 51
     13c:	31 e4       	ldi	r19, 0x41	; 65
     13e:	44 e3       	ldi	r20, 0x34	; 52
     140:	5e e3       	ldi	r21, 0x3E	; 62
     142:	1d d3       	rcall	.+1594   	; 0x77e <__divsf3>
     144:	69 87       	std	Y+9, r22	; 0x09
     146:	7a 87       	std	Y+10, r23	; 0x0a
     148:	8b 87       	std	Y+11, r24	; 0x0b

return vin;
     14a:	9c 87       	std	Y+12, r25	; 0x0c
     14c:	80 d3       	rcall	.+1792   	; 0x84e <__fixsfsi>
     14e:	cb 01       	movw	r24, r22
     150:	df 91       	pop	r29
     152:	cf 91       	pop	r28
     154:	08 95       	ret

00000156 <_Z5dummyPvl>:
	
	pS= &sts_uart0;
	pS->cbf = func_cbf;
	
	while (1) {
		uart1_proc();
     156:	60 e0       	ldi	r22, 0x00	; 0
     158:	70 e0       	ldi	r23, 0x00	; 0
     15a:	cb 01       	movw	r24, r22
     15c:	08 95       	ret

0000015e <_Z8func_cbfPvl>:
     15e:	fc 01       	movw	r30, r24
     160:	41 15       	cp	r20, r1
     162:	51 05       	cpc	r21, r1
     164:	61 05       	cpc	r22, r1
     166:	71 05       	cpc	r23, r1
     168:	f9 f4       	brne	.+62     	; 0x1a8 <_Z8func_cbfPvl+0x4a>
     16a:	82 81       	ldd	r24, Z+2	; 0x02
     16c:	93 81       	ldd	r25, Z+3	; 0x03
     16e:	01 97       	sbiw	r24, 0x01	; 1
     170:	93 83       	std	Z+3, r25	; 0x03
     172:	82 83       	std	Z+2, r24	; 0x02
     174:	89 2b       	or	r24, r25
     176:	31 f4       	brne	.+12     	; 0x184 <_Z8func_cbfPvl+0x26>
     178:	81 e0       	ldi	r24, 0x01	; 1
     17a:	81 83       	std	Z+1, r24	; 0x01
     17c:	84 81       	ldd	r24, Z+4	; 0x04
     17e:	95 81       	ldd	r25, Z+5	; 0x05
     180:	93 83       	std	Z+3, r25	; 0x03
     182:	82 83       	std	Z+2, r24	; 0x02
     184:	86 81       	ldd	r24, Z+6	; 0x06
     186:	97 81       	ldd	r25, Z+7	; 0x07
     188:	00 97       	sbiw	r24, 0x00	; 0
     18a:	21 f0       	breq	.+8      	; 0x194 <_Z8func_cbfPvl+0x36>
     18c:	01 97       	sbiw	r24, 0x01	; 1
     18e:	97 83       	std	Z+7, r25	; 0x07
     190:	86 83       	std	Z+6, r24	; 0x06
     192:	08 95       	ret
     194:	cf 01       	movw	r24, r30
     196:	00 84       	ldd	r0, Z+8	; 0x08
     198:	f1 85       	ldd	r31, Z+9	; 0x09
     19a:	e0 2d       	mov	r30, r0
     19c:	41 e0       	ldi	r20, 0x01	; 1
     19e:	50 e0       	ldi	r21, 0x00	; 0
     1a0:	60 e0       	ldi	r22, 0x00	; 0
     1a2:	70 e0       	ldi	r23, 0x00	; 0
     1a4:	09 95       	icall
     1a6:	08 95       	ret
     1a8:	41 30       	cpi	r20, 0x01	; 1
     1aa:	51 05       	cpc	r21, r1
     1ac:	61 05       	cpc	r22, r1
     1ae:	71 05       	cpc	r23, r1
     1b0:	09 f4       	brne	.+2      	; 0x1b4 <_Z8func_cbfPvl+0x56>
     1b2:	10 82       	st	Z, r1
     1b4:	08 95       	ret

000001b6 <__vector_15>:
     1b6:	1f 92       	push	r1
     1b8:	0f 92       	push	r0
     1ba:	0f b6       	in	r0, 0x3f	; 63
     1bc:	0f 92       	push	r0
     1be:	11 24       	eor	r1, r1
     1c0:	0b b6       	in	r0, 0x3b	; 59
     1c2:	0f 92       	push	r0
     1c4:	2f 93       	push	r18
     1c6:	3f 93       	push	r19
     1c8:	4f 93       	push	r20
     1ca:	5f 93       	push	r21
     1cc:	6f 93       	push	r22
     1ce:	7f 93       	push	r23
     1d0:	8f 93       	push	r24
     1d2:	9f 93       	push	r25
     1d4:	af 93       	push	r26
     1d6:	bf 93       	push	r27
     1d8:	ef 93       	push	r30
     1da:	ff 93       	push	r31
     1dc:	80 91 d3 02 	lds	r24, 0x02D3	; 0x8002d3 <flag>
     1e0:	90 91 d4 02 	lds	r25, 0x02D4	; 0x8002d4 <flag+0x1>
     1e4:	01 96       	adiw	r24, 0x01	; 1
     1e6:	90 93 d4 02 	sts	0x02D4, r25	; 0x8002d4 <flag+0x1>
     1ea:	80 93 d3 02 	sts	0x02D3, r24	; 0x8002d3 <flag>
     1ee:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <__data_start+0x8>
     1f2:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <__data_start+0x9>
     1f6:	40 e0       	ldi	r20, 0x00	; 0
     1f8:	50 e0       	ldi	r21, 0x00	; 0
     1fa:	ba 01       	movw	r22, r20
     1fc:	80 e0       	ldi	r24, 0x00	; 0
     1fe:	91 e0       	ldi	r25, 0x01	; 1
     200:	09 95       	icall
     202:	ff 91       	pop	r31
     204:	ef 91       	pop	r30
     206:	bf 91       	pop	r27
     208:	af 91       	pop	r26
     20a:	9f 91       	pop	r25
     20c:	8f 91       	pop	r24
     20e:	7f 91       	pop	r23
     210:	6f 91       	pop	r22
     212:	5f 91       	pop	r21
     214:	4f 91       	pop	r20
     216:	3f 91       	pop	r19
     218:	2f 91       	pop	r18
     21a:	0f 90       	pop	r0
     21c:	0b be       	out	0x3b, r0	; 59
     21e:	0f 90       	pop	r0
     220:	0f be       	out	0x3f, r0	; 63
     222:	0f 90       	pop	r0
     224:	1f 90       	pop	r1
     226:	18 95       	reti

00000228 <_Z10uart1_procv>:
     228:	cf 93       	push	r28
     22a:	df 93       	push	r29
     22c:	80 91 01 01 	lds	r24, 0x0101	; 0x800101 <__data_start+0x1>
     230:	81 30       	cpi	r24, 0x01	; 1
     232:	09 f0       	breq	.+2      	; 0x236 <_Z10uart1_procv+0xe>
     234:	3d c0       	rjmp	.+122    	; 0x2b0 <_Z10uart1_procv+0x88>
     236:	e0 e0       	ldi	r30, 0x00	; 0
     238:	f1 e0       	ldi	r31, 0x01	; 1
     23a:	11 82       	std	Z+1, r1	; 0x01
     23c:	80 81       	ld	r24, Z
     23e:	81 11       	cpse	r24, r1
     240:	37 c0       	rjmp	.+110    	; 0x2b0 <_Z10uart1_procv+0x88>
     242:	8c e8       	ldi	r24, 0x8C	; 140
     244:	92 e0       	ldi	r25, 0x02	; 2
     246:	5f df       	rcall	.-322    	; 0x106 <_ZN7BAT_ADC10Bat_statusEv>
     248:	80 93 8a 02 	sts	0x028A, r24	; 0x80028a <__data_end>
     24c:	90 93 8b 02 	sts	0x028B, r25	; 0x80028b <__data_end+0x1>
     250:	9f 93       	push	r25
     252:	8f 93       	push	r24
     254:	8a e0       	ldi	r24, 0x0A	; 10
     256:	91 e0       	ldi	r25, 0x01	; 1
     258:	9f 93       	push	r25
     25a:	8f 93       	push	r24
     25c:	c1 ea       	ldi	r28, 0xA1	; 161
     25e:	d2 e0       	ldi	r29, 0x02	; 2
     260:	df 93       	push	r29
     262:	cf 93       	push	r28
     264:	1f d4       	rcall	.+2110   	; 0xaa4 <sprintf>
     266:	be 01       	movw	r22, r28
     268:	8b e9       	ldi	r24, 0x9B	; 155
     26a:	92 e0       	ldi	r25, 0x02	; 2
     26c:	6c d2       	rcall	.+1240   	; 0x746 <_ZN4UART8TxStringEPc>
     26e:	80 91 a0 02 	lds	r24, 0x02A0	; 0x8002a0 <val+0x1>
     272:	8f 93       	push	r24
     274:	80 91 9f 02 	lds	r24, 0x029F	; 0x80029f <val>
     278:	8f 93       	push	r24
     27a:	83 e1       	ldi	r24, 0x13	; 19
     27c:	91 e0       	ldi	r25, 0x01	; 1
     27e:	9f 93       	push	r25
     280:	8f 93       	push	r24
     282:	df 93       	push	r29
     284:	cf 93       	push	r28
     286:	0e d4       	rcall	.+2076   	; 0xaa4 <sprintf>
     288:	be 01       	movw	r22, r28
     28a:	8b e9       	ldi	r24, 0x9B	; 155
     28c:	92 e0       	ldi	r25, 0x02	; 2
     28e:	5b d2       	rcall	.+1206   	; 0x746 <_ZN4UART8TxStringEPc>
     290:	e0 e0       	ldi	r30, 0x00	; 0
     292:	f1 e0       	ldi	r31, 0x01	; 1
     294:	81 e0       	ldi	r24, 0x01	; 1
     296:	80 83       	st	Z, r24
     298:	88 ee       	ldi	r24, 0xE8	; 232
     29a:	93 e0       	ldi	r25, 0x03	; 3
     29c:	97 83       	std	Z+7, r25	; 0x07
     29e:	86 83       	std	Z+6, r24	; 0x06
     2a0:	8d b7       	in	r24, 0x3d	; 61
     2a2:	9e b7       	in	r25, 0x3e	; 62
     2a4:	0c 96       	adiw	r24, 0x0c	; 12
     2a6:	0f b6       	in	r0, 0x3f	; 63
     2a8:	f8 94       	cli
     2aa:	9e bf       	out	0x3e, r25	; 62
     2ac:	0f be       	out	0x3f, r0	; 63
     2ae:	8d bf       	out	0x3d, r24	; 61
     2b0:	df 91       	pop	r29
     2b2:	cf 91       	pop	r28
     2b4:	08 95       	ret

000002b6 <main>:
{
	
	volatile STATE_T *pS;
	
	pS= &sts_uart0;
	pS->cbf = func_cbf;
     2b6:	8f ea       	ldi	r24, 0xAF	; 175
     2b8:	90 e0       	ldi	r25, 0x00	; 0
     2ba:	90 93 09 01 	sts	0x0109, r25	; 0x800109 <__data_start+0x9>
     2be:	80 93 08 01 	sts	0x0108, r24	; 0x800108 <__data_start+0x8>
	
	
	
	DDRF &= ~(1<<PINF0) & ~(1<<PINF1) & ~(1<<PINF2) & ~(1<<PINF3) & ~(1<<PINF4);
     2c2:	e1 e6       	ldi	r30, 0x61	; 97
     2c4:	f0 e0       	ldi	r31, 0x00	; 0
     2c6:	80 81       	ld	r24, Z
     2c8:	80 7e       	andi	r24, 0xE0	; 224
     2ca:	80 83       	st	Z, r24
	PORTF = 0x00;
     2cc:	10 92 62 00 	sts	0x0062, r1	; 0x800062 <__TEXT_REGION_LENGTH__+0x7e0062>
	
	
	
	sprintf(buffer,"System On! \r\n");
     2d0:	8e e0       	ldi	r24, 0x0E	; 14
     2d2:	e2 e2       	ldi	r30, 0x22	; 34
     2d4:	f1 e0       	ldi	r31, 0x01	; 1
     2d6:	a1 ea       	ldi	r26, 0xA1	; 161
     2d8:	b2 e0       	ldi	r27, 0x02	; 2
     2da:	01 90       	ld	r0, Z+
     2dc:	0d 92       	st	X+, r0
     2de:	8a 95       	dec	r24
     2e0:	e1 f7       	brne	.-8      	; 0x2da <main+0x24>
	uart1.TxString(buffer);
     2e2:	61 ea       	ldi	r22, 0xA1	; 161
     2e4:	72 e0       	ldi	r23, 0x02	; 2
     2e6:	8b e9       	ldi	r24, 0x9B	; 155
     2e8:	92 e0       	ldi	r25, 0x02	; 2
     2ea:	2d d2       	rcall	.+1114   	; 0x746 <_ZN4UART8TxStringEPc>
	//PORTG = 0x1f;
	
	
	while (1) 
    {
		uart1_proc();
     2ec:	9d df       	rcall	.-198    	; 0x228 <_Z10uart1_procv>
     2ee:	80 b1       	in	r24, 0x00	; 0
		
		val = PINF & (~(1<<PINF7) & ~(1<<PINF6) & ~(1<<PINF5));
     2f0:	90 e0       	ldi	r25, 0x00	; 0
     2f2:	8f 71       	andi	r24, 0x1F	; 31
     2f4:	90 93 a0 02 	sts	0x02A0, r25	; 0x8002a0 <val+0x1>
     2f8:	80 93 9f 02 	sts	0x029F, r24	; 0x80029f <val>
     2fc:	84 30       	cpi	r24, 0x04	; 4
		

		if( val == 0x04 )
     2fe:	91 05       	cpc	r25, r1
     300:	d9 f4       	brne	.+54     	; 0x338 <main+0x82>
     302:	80 b1       	in	r24, 0x00	; 0
			while((PINF & (~(1<<PINF7) & ~(1<<PINF6) & ~(1<<PINF5)))== 0x04)
     304:	8f 71       	andi	r24, 0x1F	; 31
     306:	84 30       	cpi	r24, 0x04	; 4
     308:	89 f7       	brne	.-30     	; 0x2ec <main+0x36>
     30a:	68 e2       	ldi	r22, 0x28	; 40
			{
				mymotor.motor_forward(40);
     30c:	8a e9       	ldi	r24, 0x9A	; 154
     30e:	92 e0       	ldi	r25, 0x02	; 2
     310:	7b d1       	rcall	.+758    	; 0x608 <_ZN12motor_driver13motor_forwardEh>
     312:	8f e1       	ldi	r24, 0x1F	; 31
				sprintf(buffer,"left30, right30 / val : 0x04\r\n");
     314:	e0 e3       	ldi	r30, 0x30	; 48
     316:	f1 e0       	ldi	r31, 0x01	; 1
     318:	a1 ea       	ldi	r26, 0xA1	; 161
     31a:	b2 e0       	ldi	r27, 0x02	; 2
     31c:	01 90       	ld	r0, Z+
     31e:	0d 92       	st	X+, r0
     320:	8a 95       	dec	r24
     322:	e1 f7       	brne	.-8      	; 0x31c <main+0x66>
     324:	61 ea       	ldi	r22, 0xA1	; 161
				uart1.TxString(buffer);
     326:	72 e0       	ldi	r23, 0x02	; 2
     328:	8b e9       	ldi	r24, 0x9B	; 155
     32a:	92 e0       	ldi	r25, 0x02	; 2
     32c:	0c d2       	rcall	.+1048   	; 0x746 <_ZN4UART8TxStringEPc>
     32e:	80 b1       	in	r24, 0x00	; 0
		
		val = PINF & (~(1<<PINF7) & ~(1<<PINF6) & ~(1<<PINF5));
		

		if( val == 0x04 )
			while((PINF & (~(1<<PINF7) & ~(1<<PINF6) & ~(1<<PINF5)))== 0x04)
     330:	8f 71       	andi	r24, 0x1F	; 31
     332:	84 30       	cpi	r24, 0x04	; 4
     334:	51 f3       	breq	.-44     	; 0x30a <main+0x54>
     336:	da cf       	rjmp	.-76     	; 0x2ec <main+0x36>
     338:	00 97       	sbiw	r24, 0x00	; 0
				mymotor.motor_forward(40);
				sprintf(buffer,"left30, right30 / val : 0x04\r\n");
				uart1.TxString(buffer);
			}
			
		else if(val ==0x00)
     33a:	19 f5       	brne	.+70     	; 0x382 <main+0xcc>
     33c:	80 b1       	in	r24, 0x00	; 0
		{
			
			//mymotor.motor_break();
			//_delay_ms(30);
			while((PINF & (~(1<<PINF7) & ~(1<<PINF6) & ~(1<<PINF5))) == 0x00)
     33e:	90 e0       	ldi	r25, 0x00	; 0
     340:	8f 71       	andi	r24, 0x1F	; 31
     342:	89 2b       	or	r24, r25
     344:	99 f6       	brne	.-90     	; 0x2ec <main+0x36>
     346:	4c e3       	ldi	r20, 0x3C	; 60
			{
			mymotor.motor_wheel_forward(left,60);
     348:	62 e0       	ldi	r22, 0x02	; 2
     34a:	8a e9       	ldi	r24, 0x9A	; 154
     34c:	92 e0       	ldi	r25, 0x02	; 2
     34e:	6b d1       	rcall	.+726    	; 0x626 <_ZN12motor_driver19motor_wheel_forwardEhh>
     350:	42 e3       	ldi	r20, 0x32	; 50
			mymotor.motor_wheel_backward(right,50);	
     352:	61 e0       	ldi	r22, 0x01	; 1
     354:	8a e9       	ldi	r24, 0x9A	; 154
     356:	92 e0       	ldi	r25, 0x02	; 2
     358:	84 d1       	rcall	.+776    	; 0x662 <_ZN12motor_driver20motor_wheel_backwardEhh>
     35a:	8f e1       	ldi	r24, 0x1F	; 31
     35c:	ef e4       	ldi	r30, 0x4F	; 79
			sprintf(buffer,"left50, right40 / val : 0x00\r\n");
     35e:	f1 e0       	ldi	r31, 0x01	; 1
     360:	a1 ea       	ldi	r26, 0xA1	; 161
     362:	b2 e0       	ldi	r27, 0x02	; 2
     364:	01 90       	ld	r0, Z+
     366:	0d 92       	st	X+, r0
     368:	8a 95       	dec	r24
     36a:	e1 f7       	brne	.-8      	; 0x364 <main+0xae>
     36c:	61 ea       	ldi	r22, 0xA1	; 161
			uart1.TxString(buffer);
     36e:	72 e0       	ldi	r23, 0x02	; 2
     370:	8b e9       	ldi	r24, 0x9B	; 155
     372:	92 e0       	ldi	r25, 0x02	; 2
     374:	e8 d1       	rcall	.+976    	; 0x746 <_ZN4UART8TxStringEPc>
     376:	80 b1       	in	r24, 0x00	; 0
     378:	90 e0       	ldi	r25, 0x00	; 0
		else if(val ==0x00)
		{
			
			//mymotor.motor_break();
			//_delay_ms(30);
			while((PINF & (~(1<<PINF7) & ~(1<<PINF6) & ~(1<<PINF5))) == 0x00)
     37a:	8f 71       	andi	r24, 0x1F	; 31
     37c:	89 2b       	or	r24, r25
     37e:	19 f3       	breq	.-58     	; 0x346 <main+0x90>
     380:	b5 cf       	rjmp	.-150    	; 0x2ec <main+0x36>
     382:	82 30       	cpi	r24, 0x02	; 2
     384:	91 05       	cpc	r25, r1
				mymotor.motor_wheel_forward(right,30);
				sprintf(buffer,"left35, right10 / val : 0x40\r\n");
				uart1.TxString(buffer);
			}
		}
		else if (val == 0x02)
     386:	11 f5       	brne	.+68     	; 0x3cc <main+0x116>
     388:	80 b1       	in	r24, 0x00	; 0
     38a:	8f 71       	andi	r24, 0x1F	; 31
		{
			while((PINF & (~(1<<PINF7) & ~(1<<PINF6) & ~(1<<PINF5)))== 0x02)
     38c:	82 30       	cpi	r24, 0x02	; 2
     38e:	09 f0       	breq	.+2      	; 0x392 <main+0xdc>
     390:	ad cf       	rjmp	.-166    	; 0x2ec <main+0x36>
     392:	43 e2       	ldi	r20, 0x23	; 35
			{
				mymotor.motor_wheel_forward(left,35);
     394:	62 e0       	ldi	r22, 0x02	; 2
     396:	8a e9       	ldi	r24, 0x9A	; 154
     398:	92 e0       	ldi	r25, 0x02	; 2
     39a:	45 d1       	rcall	.+650    	; 0x626 <_ZN12motor_driver19motor_wheel_forwardEhh>
     39c:	49 e1       	ldi	r20, 0x19	; 25
				mymotor.motor_wheel_forward(right,25);
     39e:	61 e0       	ldi	r22, 0x01	; 1
     3a0:	8a e9       	ldi	r24, 0x9A	; 154
     3a2:	92 e0       	ldi	r25, 0x02	; 2
     3a4:	40 d1       	rcall	.+640    	; 0x626 <_ZN12motor_driver19motor_wheel_forwardEhh>
     3a6:	8f e1       	ldi	r24, 0x1F	; 31
     3a8:	ee e6       	ldi	r30, 0x6E	; 110
				sprintf(buffer,"left30, right10 / val : 0x02\r\n");
     3aa:	f1 e0       	ldi	r31, 0x01	; 1
     3ac:	a1 ea       	ldi	r26, 0xA1	; 161
     3ae:	b2 e0       	ldi	r27, 0x02	; 2
     3b0:	01 90       	ld	r0, Z+
     3b2:	0d 92       	st	X+, r0
     3b4:	8a 95       	dec	r24
     3b6:	e1 f7       	brne	.-8      	; 0x3b0 <main+0xfa>
     3b8:	61 ea       	ldi	r22, 0xA1	; 161
				uart1.TxString(buffer);
     3ba:	72 e0       	ldi	r23, 0x02	; 2
     3bc:	8b e9       	ldi	r24, 0x9B	; 155
     3be:	92 e0       	ldi	r25, 0x02	; 2
     3c0:	c2 d1       	rcall	.+900    	; 0x746 <_ZN4UART8TxStringEPc>
     3c2:	80 b1       	in	r24, 0x00	; 0
     3c4:	8f 71       	andi	r24, 0x1F	; 31
				uart1.TxString(buffer);
			}
		}
		else if (val == 0x02)
		{
			while((PINF & (~(1<<PINF7) & ~(1<<PINF6) & ~(1<<PINF5)))== 0x02)
     3c6:	82 30       	cpi	r24, 0x02	; 2
     3c8:	21 f3       	breq	.-56     	; 0x392 <main+0xdc>
     3ca:	90 cf       	rjmp	.-224    	; 0x2ec <main+0x36>
     3cc:	88 30       	cpi	r24, 0x08	; 8
     3ce:	91 05       	cpc	r25, r1
				mymotor.motor_wheel_forward(right,25);
				sprintf(buffer,"left30, right10 / val : 0x02\r\n");
				uart1.TxString(buffer);
			}
		}
		else if (val == 0x08)
     3d0:	11 f5       	brne	.+68     	; 0x416 <__LOCK_REGION_LENGTH__+0x16>
     3d2:	80 b1       	in	r24, 0x00	; 0
		{
			while((PINF & (~(1<<PINF7) & ~(1<<PINF6) & ~(1<<PINF5)))== 0x08)
     3d4:	8f 71       	andi	r24, 0x1F	; 31
     3d6:	88 30       	cpi	r24, 0x08	; 8
     3d8:	09 f0       	breq	.+2      	; 0x3dc <main+0x126>
     3da:	88 cf       	rjmp	.-240    	; 0x2ec <main+0x36>
			{
				mymotor.motor_wheel_forward(right,40);
     3dc:	48 e2       	ldi	r20, 0x28	; 40
     3de:	61 e0       	ldi	r22, 0x01	; 1
     3e0:	8a e9       	ldi	r24, 0x9A	; 154
     3e2:	92 e0       	ldi	r25, 0x02	; 2
     3e4:	20 d1       	rcall	.+576    	; 0x626 <_ZN12motor_driver19motor_wheel_forwardEhh>
     3e6:	4e e1       	ldi	r20, 0x1E	; 30
				mymotor.motor_wheel_forward(left,30);
     3e8:	62 e0       	ldi	r22, 0x02	; 2
     3ea:	8a e9       	ldi	r24, 0x9A	; 154
     3ec:	92 e0       	ldi	r25, 0x02	; 2
     3ee:	1b d1       	rcall	.+566    	; 0x626 <_ZN12motor_driver19motor_wheel_forwardEhh>
     3f0:	8f e1       	ldi	r24, 0x1F	; 31
     3f2:	ed e8       	ldi	r30, 0x8D	; 141
				sprintf(buffer,"left10, right30 / val : 0x08\r\n");
     3f4:	f1 e0       	ldi	r31, 0x01	; 1
     3f6:	a1 ea       	ldi	r26, 0xA1	; 161
     3f8:	b2 e0       	ldi	r27, 0x02	; 2
     3fa:	01 90       	ld	r0, Z+
     3fc:	0d 92       	st	X+, r0
     3fe:	8a 95       	dec	r24
     400:	e1 f7       	brne	.-8      	; 0x3fa <main+0x144>
     402:	61 ea       	ldi	r22, 0xA1	; 161
				uart1.TxString(buffer);
     404:	72 e0       	ldi	r23, 0x02	; 2
     406:	8b e9       	ldi	r24, 0x9B	; 155
     408:	92 e0       	ldi	r25, 0x02	; 2
     40a:	9d d1       	rcall	.+826    	; 0x746 <_ZN4UART8TxStringEPc>
     40c:	80 b1       	in	r24, 0x00	; 0
     40e:	8f 71       	andi	r24, 0x1F	; 31
				uart1.TxString(buffer);
			}
		}
		else if (val == 0x08)
		{
			while((PINF & (~(1<<PINF7) & ~(1<<PINF6) & ~(1<<PINF5)))== 0x08)
     410:	88 30       	cpi	r24, 0x08	; 8
     412:	21 f3       	breq	.-56     	; 0x3dc <main+0x126>
     414:	6b cf       	rjmp	.-298    	; 0x2ec <main+0x36>
     416:	87 30       	cpi	r24, 0x07	; 7
				mymotor.motor_wheel_forward(left,30);
				sprintf(buffer,"left10, right30 / val : 0x08\r\n");
				uart1.TxString(buffer);
			}
		}
		else if (val == 0x07)
     418:	91 05       	cpc	r25, r1
     41a:	11 f5       	brne	.+68     	; 0x460 <__LOCK_REGION_LENGTH__+0x60>
     41c:	80 b1       	in	r24, 0x00	; 0
		{
			while((PINF & (~(1<<PINF7) & ~(1<<PINF6) & ~(1<<PINF5)))== 0x07)
     41e:	8f 71       	andi	r24, 0x1F	; 31
     420:	87 30       	cpi	r24, 0x07	; 7
     422:	09 f0       	breq	.+2      	; 0x426 <__LOCK_REGION_LENGTH__+0x26>
     424:	63 cf       	rjmp	.-314    	; 0x2ec <main+0x36>
			{
				mymotor.motor_wheel_forward(left,60);
     426:	4c e3       	ldi	r20, 0x3C	; 60
     428:	62 e0       	ldi	r22, 0x02	; 2
     42a:	8a e9       	ldi	r24, 0x9A	; 154
     42c:	92 e0       	ldi	r25, 0x02	; 2
     42e:	fb d0       	rcall	.+502    	; 0x626 <_ZN12motor_driver19motor_wheel_forwardEhh>
     430:	41 e0       	ldi	r20, 0x01	; 1
				mymotor.motor_wheel_backward(right,1);
     432:	61 e0       	ldi	r22, 0x01	; 1
     434:	8a e9       	ldi	r24, 0x9A	; 154
     436:	92 e0       	ldi	r25, 0x02	; 2
     438:	14 d1       	rcall	.+552    	; 0x662 <_ZN12motor_driver20motor_wheel_backwardEhh>
     43a:	8f e1       	ldi	r24, 0x1F	; 31
				sprintf(buffer,"left50, right20 / val : 0x07\r\n");
     43c:	ec ea       	ldi	r30, 0xAC	; 172
     43e:	f1 e0       	ldi	r31, 0x01	; 1
     440:	a1 ea       	ldi	r26, 0xA1	; 161
     442:	b2 e0       	ldi	r27, 0x02	; 2
     444:	01 90       	ld	r0, Z+
     446:	0d 92       	st	X+, r0
     448:	8a 95       	dec	r24
     44a:	e1 f7       	brne	.-8      	; 0x444 <__LOCK_REGION_LENGTH__+0x44>
     44c:	61 ea       	ldi	r22, 0xA1	; 161
				uart1.TxString(buffer);
     44e:	72 e0       	ldi	r23, 0x02	; 2
     450:	8b e9       	ldi	r24, 0x9B	; 155
     452:	92 e0       	ldi	r25, 0x02	; 2
     454:	78 d1       	rcall	.+752    	; 0x746 <_ZN4UART8TxStringEPc>
     456:	80 b1       	in	r24, 0x00	; 0
				uart1.TxString(buffer);
			}
		}
		else if (val == 0x07)
		{
			while((PINF & (~(1<<PINF7) & ~(1<<PINF6) & ~(1<<PINF5)))== 0x07)
     458:	8f 71       	andi	r24, 0x1F	; 31
     45a:	87 30       	cpi	r24, 0x07	; 7
     45c:	21 f3       	breq	.-56     	; 0x426 <__LOCK_REGION_LENGTH__+0x26>
     45e:	46 cf       	rjmp	.-372    	; 0x2ec <main+0x36>
				sprintf(buffer,"left50, right20 / val : 0x07\r\n");
				uart1.TxString(buffer);
				
			}
		}
		else if(val == 0x01)
     460:	81 30       	cpi	r24, 0x01	; 1
     462:	91 05       	cpc	r25, r1
     464:	c9 f4       	brne	.+50     	; 0x498 <__LOCK_REGION_LENGTH__+0x98>
		{
			mymotor.motor_wheel_forward(left,60);
     466:	4c e3       	ldi	r20, 0x3C	; 60
     468:	62 e0       	ldi	r22, 0x02	; 2
     46a:	8a e9       	ldi	r24, 0x9A	; 154
     46c:	92 e0       	ldi	r25, 0x02	; 2
     46e:	db d0       	rcall	.+438    	; 0x626 <_ZN12motor_driver19motor_wheel_forwardEhh>
     470:	4e e1       	ldi	r20, 0x1E	; 30
			mymotor.motor_wheel_backward(right,30);
     472:	61 e0       	ldi	r22, 0x01	; 1
     474:	8a e9       	ldi	r24, 0x9A	; 154
     476:	92 e0       	ldi	r25, 0x02	; 2
     478:	f4 d0       	rcall	.+488    	; 0x662 <_ZN12motor_driver20motor_wheel_backwardEhh>
     47a:	80 e2       	ldi	r24, 0x20	; 32
			sprintf(buffer,"left50, right-20 / val : 0x01\r\n");
     47c:	eb ec       	ldi	r30, 0xCB	; 203
     47e:	f1 e0       	ldi	r31, 0x01	; 1
     480:	a1 ea       	ldi	r26, 0xA1	; 161
     482:	b2 e0       	ldi	r27, 0x02	; 2
     484:	01 90       	ld	r0, Z+
     486:	0d 92       	st	X+, r0
     488:	8a 95       	dec	r24
     48a:	e1 f7       	brne	.-8      	; 0x484 <__LOCK_REGION_LENGTH__+0x84>
			uart1.TxString(buffer);
     48c:	61 ea       	ldi	r22, 0xA1	; 161
     48e:	72 e0       	ldi	r23, 0x02	; 2
     490:	8b e9       	ldi	r24, 0x9B	; 155
     492:	92 e0       	ldi	r25, 0x02	; 2
     494:	58 d1       	rcall	.+688    	; 0x746 <_ZN4UART8TxStringEPc>
     496:	2a cf       	rjmp	.-428    	; 0x2ec <main+0x36>
		}
		else if(val == 0x10)
     498:	80 31       	cpi	r24, 0x10	; 16
     49a:	91 05       	cpc	r25, r1
     49c:	c9 f4       	brne	.+50     	; 0x4d0 <__LOCK_REGION_LENGTH__+0xd0>
		{
			mymotor.motor_wheel_forward(right,60);
     49e:	4c e3       	ldi	r20, 0x3C	; 60
     4a0:	61 e0       	ldi	r22, 0x01	; 1
     4a2:	8a e9       	ldi	r24, 0x9A	; 154
     4a4:	92 e0       	ldi	r25, 0x02	; 2
     4a6:	bf d0       	rcall	.+382    	; 0x626 <_ZN12motor_driver19motor_wheel_forwardEhh>
			mymotor.motor_wheel_backward(left,30);
     4a8:	4e e1       	ldi	r20, 0x1E	; 30
     4aa:	62 e0       	ldi	r22, 0x02	; 2
     4ac:	8a e9       	ldi	r24, 0x9A	; 154
     4ae:	92 e0       	ldi	r25, 0x02	; 2
     4b0:	d8 d0       	rcall	.+432    	; 0x662 <_ZN12motor_driver20motor_wheel_backwardEhh>
     4b2:	80 e2       	ldi	r24, 0x20	; 32
			sprintf(buffer,"left-20, right50 / val : 0x10\r\n");
     4b4:	eb ee       	ldi	r30, 0xEB	; 235
     4b6:	f1 e0       	ldi	r31, 0x01	; 1
     4b8:	a1 ea       	ldi	r26, 0xA1	; 161
     4ba:	b2 e0       	ldi	r27, 0x02	; 2
     4bc:	01 90       	ld	r0, Z+
     4be:	0d 92       	st	X+, r0
     4c0:	8a 95       	dec	r24
			uart1.TxString(buffer);
     4c2:	e1 f7       	brne	.-8      	; 0x4bc <__LOCK_REGION_LENGTH__+0xbc>
     4c4:	61 ea       	ldi	r22, 0xA1	; 161
     4c6:	72 e0       	ldi	r23, 0x02	; 2
     4c8:	8b e9       	ldi	r24, 0x9B	; 155
     4ca:	92 e0       	ldi	r25, 0x02	; 2
     4cc:	3c d1       	rcall	.+632    	; 0x746 <_ZN4UART8TxStringEPc>
     4ce:	0e cf       	rjmp	.-484    	; 0x2ec <main+0x36>
		}

		else if(val == 0x0e)
     4d0:	8e 30       	cpi	r24, 0x0E	; 14
     4d2:	91 05       	cpc	r25, r1
     4d4:	c9 f4       	brne	.+50     	; 0x508 <__LOCK_REGION_LENGTH__+0x108>
		{
			mymotor.motor_wheel_forward(left,60);
     4d6:	4c e3       	ldi	r20, 0x3C	; 60
     4d8:	62 e0       	ldi	r22, 0x02	; 2
     4da:	8a e9       	ldi	r24, 0x9A	; 154
     4dc:	92 e0       	ldi	r25, 0x02	; 2
     4de:	a3 d0       	rcall	.+326    	; 0x626 <_ZN12motor_driver19motor_wheel_forwardEhh>
			mymotor.motor_wheel_backward(right,30);
     4e0:	4e e1       	ldi	r20, 0x1E	; 30
     4e2:	61 e0       	ldi	r22, 0x01	; 1
     4e4:	8a e9       	ldi	r24, 0x9A	; 154
     4e6:	92 e0       	ldi	r25, 0x02	; 2
     4e8:	bc d0       	rcall	.+376    	; 0x662 <_ZN12motor_driver20motor_wheel_backwardEhh>
			sprintf(buffer,"left50, right-20 / val : 0x0E\r\n");
     4ea:	80 e2       	ldi	r24, 0x20	; 32
     4ec:	eb e0       	ldi	r30, 0x0B	; 11
     4ee:	f2 e0       	ldi	r31, 0x02	; 2
     4f0:	a1 ea       	ldi	r26, 0xA1	; 161
     4f2:	b2 e0       	ldi	r27, 0x02	; 2
     4f4:	01 90       	ld	r0, Z+
     4f6:	0d 92       	st	X+, r0
     4f8:	8a 95       	dec	r24
			uart1.TxString(buffer);
     4fa:	e1 f7       	brne	.-8      	; 0x4f4 <__LOCK_REGION_LENGTH__+0xf4>
     4fc:	61 ea       	ldi	r22, 0xA1	; 161
     4fe:	72 e0       	ldi	r23, 0x02	; 2
     500:	8b e9       	ldi	r24, 0x9B	; 155
     502:	92 e0       	ldi	r25, 0x02	; 2
     504:	20 d1       	rcall	.+576    	; 0x746 <_ZN4UART8TxStringEPc>
     506:	f2 ce       	rjmp	.-540    	; 0x2ec <main+0x36>
		}
		else if (val == 0x1e)
     508:	8e 31       	cpi	r24, 0x1E	; 30
     50a:	91 05       	cpc	r25, r1
		{
			mymotor.motor_wheel_forward(left,60);
     50c:	c9 f4       	brne	.+50     	; 0x540 <__LOCK_REGION_LENGTH__+0x140>
     50e:	4c e3       	ldi	r20, 0x3C	; 60
     510:	62 e0       	ldi	r22, 0x02	; 2
     512:	8a e9       	ldi	r24, 0x9A	; 154
     514:	92 e0       	ldi	r25, 0x02	; 2
     516:	87 d0       	rcall	.+270    	; 0x626 <_ZN12motor_driver19motor_wheel_forwardEhh>
			mymotor.motor_wheel_backward(right,30);
     518:	4e e1       	ldi	r20, 0x1E	; 30
     51a:	61 e0       	ldi	r22, 0x01	; 1
     51c:	8a e9       	ldi	r24, 0x9A	; 154
     51e:	92 e0       	ldi	r25, 0x02	; 2
     520:	a0 d0       	rcall	.+320    	; 0x662 <_ZN12motor_driver20motor_wheel_backwardEhh>
			sprintf(buffer,"left50, right-20 / val : 0x1E\r\n");
     522:	80 e2       	ldi	r24, 0x20	; 32
     524:	eb e2       	ldi	r30, 0x2B	; 43
     526:	f2 e0       	ldi	r31, 0x02	; 2
     528:	a1 ea       	ldi	r26, 0xA1	; 161
     52a:	b2 e0       	ldi	r27, 0x02	; 2
     52c:	01 90       	ld	r0, Z+
     52e:	0d 92       	st	X+, r0
     530:	8a 95       	dec	r24
			uart1.TxString(buffer);
     532:	e1 f7       	brne	.-8      	; 0x52c <__LOCK_REGION_LENGTH__+0x12c>
     534:	61 ea       	ldi	r22, 0xA1	; 161
     536:	72 e0       	ldi	r23, 0x02	; 2
     538:	8b e9       	ldi	r24, 0x9B	; 155
     53a:	92 e0       	ldi	r25, 0x02	; 2
     53c:	04 d1       	rcall	.+520    	; 0x746 <_ZN4UART8TxStringEPc>
		}
		else if (val == 0x0F)
     53e:	d6 ce       	rjmp	.-596    	; 0x2ec <main+0x36>
     540:	8f 30       	cpi	r24, 0x0F	; 15
     542:	91 05       	cpc	r25, r1
		{
			mymotor.motor_wheel_forward(left,70);
     544:	c9 f4       	brne	.+50     	; 0x578 <__LOCK_REGION_LENGTH__+0x178>
     546:	46 e4       	ldi	r20, 0x46	; 70
     548:	62 e0       	ldi	r22, 0x02	; 2
     54a:	8a e9       	ldi	r24, 0x9A	; 154
     54c:	92 e0       	ldi	r25, 0x02	; 2
			mymotor.motor_wheel_backward(right,30);
     54e:	6b d0       	rcall	.+214    	; 0x626 <_ZN12motor_driver19motor_wheel_forwardEhh>
     550:	4e e1       	ldi	r20, 0x1E	; 30
     552:	61 e0       	ldi	r22, 0x01	; 1
     554:	8a e9       	ldi	r24, 0x9A	; 154
     556:	92 e0       	ldi	r25, 0x02	; 2
			sprintf(buffer,"left50, right-20 / val : 0x0F\r\n");
     558:	84 d0       	rcall	.+264    	; 0x662 <_ZN12motor_driver20motor_wheel_backwardEhh>
     55a:	80 e2       	ldi	r24, 0x20	; 32
     55c:	eb e4       	ldi	r30, 0x4B	; 75
     55e:	f2 e0       	ldi	r31, 0x02	; 2
     560:	a1 ea       	ldi	r26, 0xA1	; 161
     562:	b2 e0       	ldi	r27, 0x02	; 2
     564:	01 90       	ld	r0, Z+
     566:	0d 92       	st	X+, r0
     568:	8a 95       	dec	r24
			uart1.TxString(buffer);
     56a:	e1 f7       	brne	.-8      	; 0x564 <__LOCK_REGION_LENGTH__+0x164>
     56c:	61 ea       	ldi	r22, 0xA1	; 161
     56e:	72 e0       	ldi	r23, 0x02	; 2
     570:	8b e9       	ldi	r24, 0x9B	; 155
     572:	92 e0       	ldi	r25, 0x02	; 2
     574:	e8 d0       	rcall	.+464    	; 0x746 <_ZN4UART8TxStringEPc>
			
		}
		else if (val == 0x03) // 오른쪽 2개 탐색
     576:	ba ce       	rjmp	.-652    	; 0x2ec <main+0x36>
     578:	03 97       	sbiw	r24, 0x03	; 3
     57a:	09 f0       	breq	.+2      	; 0x57e <__LOCK_REGION_LENGTH__+0x17e>
		{
			mymotor.motor_wheel_forward(left,60);
     57c:	b7 ce       	rjmp	.-658    	; 0x2ec <main+0x36>
     57e:	4c e3       	ldi	r20, 0x3C	; 60
     580:	62 e0       	ldi	r22, 0x02	; 2
     582:	8a e9       	ldi	r24, 0x9A	; 154
     584:	92 e0       	ldi	r25, 0x02	; 2
     586:	4f d0       	rcall	.+158    	; 0x626 <_ZN12motor_driver19motor_wheel_forwardEhh>
			mymotor.motor_wheel_forward(right,35);
     588:	43 e2       	ldi	r20, 0x23	; 35
     58a:	61 e0       	ldi	r22, 0x01	; 1
     58c:	8a e9       	ldi	r24, 0x9A	; 154
     58e:	92 e0       	ldi	r25, 0x02	; 2
     590:	4a d0       	rcall	.+148    	; 0x626 <_ZN12motor_driver19motor_wheel_forwardEhh>
     592:	8f e1       	ldi	r24, 0x1F	; 31
			sprintf(buffer,"left50, right20 / val : 0x0F\r\n");
     594:	eb e6       	ldi	r30, 0x6B	; 107
     596:	f2 e0       	ldi	r31, 0x02	; 2
     598:	a1 ea       	ldi	r26, 0xA1	; 161
     59a:	b2 e0       	ldi	r27, 0x02	; 2
     59c:	01 90       	ld	r0, Z+
     59e:	0d 92       	st	X+, r0
     5a0:	8a 95       	dec	r24
     5a2:	e1 f7       	brne	.-8      	; 0x59c <__LOCK_REGION_LENGTH__+0x19c>
     5a4:	61 ea       	ldi	r22, 0xA1	; 161
			uart1.TxString(buffer);
     5a6:	72 e0       	ldi	r23, 0x02	; 2
     5a8:	8b e9       	ldi	r24, 0x9B	; 155
     5aa:	92 e0       	ldi	r25, 0x02	; 2
     5ac:	cc d0       	rcall	.+408    	; 0x746 <_ZN4UART8TxStringEPc>
     5ae:	9e ce       	rjmp	.-708    	; 0x2ec <main+0x36>

000005b0 <_GLOBAL__sub_I_flag>:
     5b0:	47 e6       	ldi	r20, 0x67	; 103
     5b2:	60 e0       	ldi	r22, 0x00	; 0
volatile uint16_t flag = 0;
volatile uint16_t distance;
volatile uint16_t timer_cnt;
char buffer[50];
unsigned int val , right_curve = 0 , left_curve = 0;
UART uart0 = UART(0,BAUD_9600); //USB UART
     5b4:	8d e9       	ldi	r24, 0x9D	; 157
     5b6:	92 e0       	ldi	r25, 0x02	; 2
     5b8:	72 d0       	rcall	.+228    	; 0x69e <_ZN4UARTC1Ehh>
UART uart1 = UART(1,BAUD_9600); //BlueTooth UART
     5ba:	47 e6       	ldi	r20, 0x67	; 103
     5bc:	61 e0       	ldi	r22, 0x01	; 1
     5be:	8b e9       	ldi	r24, 0x9B	; 155
     5c0:	92 e0       	ldi	r25, 0x02	; 2
     5c2:	6d d0       	rcall	.+218    	; 0x69e <_ZN4UARTC1Ehh>

class motor_driver
{
public:
	motor_driver(){
		motor_init();
     5c4:	8a e9       	ldi	r24, 0x9A	; 154
     5c6:	92 e0       	ldi	r25, 0x02	; 2
     5c8:	08 d0       	rcall	.+16     	; 0x5da <_ZN12motor_driver10motor_initEv>

class ultra_sonic
{
public:
	ultra_sonic(){
		ultra_sonic_init();
     5ca:	89 e9       	ldi	r24, 0x99	; 153
     5cc:	92 e0       	ldi	r25, 0x02	; 2
     5ce:	cf d0       	rcall	.+414    	; 0x76e <_ZN11ultra_sonic16ultra_sonic_initEv>
motor_driver mymotor;
ultra_sonic mysonic;
BAT_ADC bat = BAT_ADC(5);
     5d0:	65 e0       	ldi	r22, 0x05	; 5
     5d2:	8c e8       	ldi	r24, 0x8C	; 140
     5d4:	92 e0       	ldi	r25, 0x02	; 2
     5d6:	83 cd       	rjmp	.-1274   	; 0xde <_ZN7BAT_ADCC1Eh>
     5d8:	08 95       	ret

000005da <_ZN12motor_driver10motor_initEv>:
     5da:	e4 e6       	ldi	r30, 0x64	; 100
	//OCR1A = 249;  // 속도
	//OCR1B = 249;  // 속도
	
	speed = (speed * 2);
	OCR1A = (uint8_t)speed;  // 속도
	OCR1B = (uint8_t)speed;  // 속도
     5dc:	f0 e0       	ldi	r31, 0x00	; 0
     5de:	80 81       	ld	r24, Z
     5e0:	8f 60       	ori	r24, 0x0F	; 15
     5e2:	80 83       	st	Z, r24
     5e4:	e5 e6       	ldi	r30, 0x65	; 101
     5e6:	f0 e0       	ldi	r31, 0x00	; 0
     5e8:	80 81       	ld	r24, Z
     5ea:	80 7f       	andi	r24, 0xF0	; 240
     5ec:	80 83       	st	Z, r24
     5ee:	80 e6       	ldi	r24, 0x60	; 96
     5f0:	87 bb       	out	0x17, r24	; 23
     5f2:	8f b5       	in	r24, 0x2f	; 47
     5f4:	82 6a       	ori	r24, 0xA2	; 162
     5f6:	8f bd       	out	0x2f, r24	; 47
     5f8:	8e b5       	in	r24, 0x2e	; 46
     5fa:	8a 61       	ori	r24, 0x1A	; 26
     5fc:	8e bd       	out	0x2e, r24	; 46
     5fe:	88 ec       	ldi	r24, 0xC8	; 200
     600:	90 e0       	ldi	r25, 0x00	; 0
     602:	97 bd       	out	0x27, r25	; 39
     604:	86 bd       	out	0x26, r24	; 38
     606:	08 95       	ret

00000608 <_ZN12motor_driver13motor_forwardEh>:
     608:	e5 e6       	ldi	r30, 0x65	; 101
     60a:	f0 e0       	ldi	r31, 0x00	; 0
     60c:	80 81       	ld	r24, Z
     60e:	85 60       	ori	r24, 0x05	; 5
     610:	80 83       	st	Z, r24
     612:	80 81       	ld	r24, Z
     614:	85 7f       	andi	r24, 0xF5	; 245
     616:	80 83       	st	Z, r24
     618:	66 0f       	add	r22, r22
     61a:	70 e0       	ldi	r23, 0x00	; 0
     61c:	7b bd       	out	0x2b, r23	; 43
     61e:	6a bd       	out	0x2a, r22	; 42
     620:	79 bd       	out	0x29, r23	; 41
     622:	68 bd       	out	0x28, r22	; 40
     624:	08 95       	ret

00000626 <_ZN12motor_driver19motor_wheel_forwardEhh>:
}
void motor_driver::motor_wheel_forward(uint8_t wheel,uint8_t speed){
	
	if(wheel == 1){
     626:	61 30       	cpi	r22, 0x01	; 1
     628:	69 f4       	brne	.+26     	; 0x644 <_ZN12motor_driver19motor_wheel_forwardEhh+0x1e>
		
		DIR_PORT |= (1<<IN1_R_F);
     62a:	e5 e6       	ldi	r30, 0x65	; 101
     62c:	f0 e0       	ldi	r31, 0x00	; 0
     62e:	80 81       	ld	r24, Z
     630:	81 60       	ori	r24, 0x01	; 1
     632:	80 83       	st	Z, r24
		DIR_PORT &= ~(1<<IN2_R_B);
     634:	80 81       	ld	r24, Z
     636:	8d 7f       	andi	r24, 0xFD	; 253
     638:	80 83       	st	Z, r24
		
		//OCR1A = 249;  // 속도
		
		speed = (speed * 2);
		OCR1A = (uint8_t)speed;  // 속도
     63a:	44 0f       	add	r20, r20
     63c:	50 e0       	ldi	r21, 0x00	; 0
     63e:	5b bd       	out	0x2b, r21	; 43
     640:	4a bd       	out	0x2a, r20	; 42
     642:	08 95       	ret
		//OCR1B = speed;  // 속도
	}
	if(wheel == 2){
     644:	62 30       	cpi	r22, 0x02	; 2
     646:	61 f4       	brne	.+24     	; 0x660 <_ZN12motor_driver19motor_wheel_forwardEhh+0x3a>
		
		DIR_PORT |= (1<<IN3_L_F);
     648:	e5 e6       	ldi	r30, 0x65	; 101
     64a:	f0 e0       	ldi	r31, 0x00	; 0
     64c:	80 81       	ld	r24, Z
     64e:	84 60       	ori	r24, 0x04	; 4
     650:	80 83       	st	Z, r24
		DIR_PORT &= ~(1<<IN4_L_B);
     652:	80 81       	ld	r24, Z
     654:	87 7f       	andi	r24, 0xF7	; 247
     656:	80 83       	st	Z, r24
		
		//OCR1B = 249;  // 속도
		
		speed = (speed * 2);
		//OCR1A = speed;  // 속도
		OCR1B = (uint8_t)speed;  // 속도
     658:	44 0f       	add	r20, r20
     65a:	50 e0       	ldi	r21, 0x00	; 0
     65c:	59 bd       	out	0x29, r21	; 41
     65e:	48 bd       	out	0x28, r20	; 40
     660:	08 95       	ret

00000662 <_ZN12motor_driver20motor_wheel_backwardEhh>:
	}
}
void motor_driver::motor_wheel_backward(uint8_t wheel,uint8_t speed){
	
	if(wheel == 1){
     662:	61 30       	cpi	r22, 0x01	; 1
     664:	69 f4       	brne	.+26     	; 0x680 <_ZN12motor_driver20motor_wheel_backwardEhh+0x1e>
		DIR_PORT |= (1<<IN2_R_B);
     666:	e5 e6       	ldi	r30, 0x65	; 101
     668:	f0 e0       	ldi	r31, 0x00	; 0
     66a:	80 81       	ld	r24, Z
     66c:	82 60       	ori	r24, 0x02	; 2
     66e:	80 83       	st	Z, r24
		DIR_PORT &= ~(1<<IN1_R_F);
     670:	80 81       	ld	r24, Z
     672:	8e 7f       	andi	r24, 0xFE	; 254
     674:	80 83       	st	Z, r24
		
		speed = (speed * 2);
		OCR1A = (uint8_t)speed;  // 속도
     676:	44 0f       	add	r20, r20
     678:	50 e0       	ldi	r21, 0x00	; 0
     67a:	5b bd       	out	0x2b, r21	; 43
     67c:	4a bd       	out	0x2a, r20	; 42
     67e:	08 95       	ret
		
	}
	if(wheel == 2){
     680:	62 30       	cpi	r22, 0x02	; 2
     682:	61 f4       	brne	.+24     	; 0x69c <_ZN12motor_driver20motor_wheel_backwardEhh+0x3a>
		DIR_PORT |= (1<<IN4_L_B);
     684:	e5 e6       	ldi	r30, 0x65	; 101
     686:	f0 e0       	ldi	r31, 0x00	; 0
     688:	80 81       	ld	r24, Z
     68a:	88 60       	ori	r24, 0x08	; 8
     68c:	80 83       	st	Z, r24
		DIR_PORT &= ~(1<<IN3_L_F);
     68e:	80 81       	ld	r24, Z
     690:	8b 7f       	andi	r24, 0xFB	; 251
     692:	80 83       	st	Z, r24
		
		speed = (speed * 2);
		OCR1B = (uint8_t)speed;  // 속도
     694:	44 0f       	add	r20, r20
     696:	50 e0       	ldi	r21, 0x00	; 0
     698:	59 bd       	out	0x29, r21	; 41
     69a:	48 bd       	out	0x28, r20	; 40
     69c:	08 95       	ret

0000069e <_ZN4UARTC1Ehh>:
	while ( !IsRxD() ) ;
	if (uart_select == 0)
		return UDR0;
	else if (uart_select == 1)
		return UDR1;
}
     69e:	fc 01       	movw	r30, r24
     6a0:	60 83       	st	Z, r22
     6a2:	61 11       	cpse	r22, r1
     6a4:	10 c0       	rjmp	.+32     	; 0x6c6 <_ZN4UARTC1Ehh+0x28>
     6a6:	83 b1       	in	r24, 0x03	; 3
     6a8:	83 60       	ori	r24, 0x03	; 3
     6aa:	83 b9       	out	0x03, r24	; 3
     6ac:	10 98       	cbi	0x02, 0	; 2
     6ae:	11 9a       	sbi	0x02, 1	; 2
     6b0:	49 b9       	out	0x09, r20	; 9
     6b2:	1b b8       	out	0x0b, r1	; 11
     6b4:	8a b1       	in	r24, 0x0a	; 10
     6b6:	88 61       	ori	r24, 0x18	; 24
     6b8:	8a b9       	out	0x0a, r24	; 10
     6ba:	e5 e9       	ldi	r30, 0x95	; 149
     6bc:	f0 e0       	ldi	r31, 0x00	; 0
     6be:	80 81       	ld	r24, Z
     6c0:	86 60       	ori	r24, 0x06	; 6
     6c2:	80 83       	st	Z, r24
     6c4:	08 95       	ret
     6c6:	61 30       	cpi	r22, 0x01	; 1
     6c8:	99 f4       	brne	.+38     	; 0x6f0 <_ZN4UARTC1Ehh+0x52>
     6ca:	82 b3       	in	r24, 0x12	; 18
     6cc:	8c 60       	ori	r24, 0x0C	; 12
     6ce:	82 bb       	out	0x12, r24	; 18
     6d0:	8a 98       	cbi	0x11, 2	; 17
     6d2:	8b 9a       	sbi	0x11, 3	; 17
     6d4:	40 93 99 00 	sts	0x0099, r20	; 0x800099 <__TEXT_REGION_LENGTH__+0x7e0099>
     6d8:	10 92 9b 00 	sts	0x009B, r1	; 0x80009b <__TEXT_REGION_LENGTH__+0x7e009b>
     6dc:	ea e9       	ldi	r30, 0x9A	; 154
     6de:	f0 e0       	ldi	r31, 0x00	; 0
     6e0:	80 81       	ld	r24, Z
     6e2:	88 61       	ori	r24, 0x18	; 24
     6e4:	80 83       	st	Z, r24
     6e6:	ed e9       	ldi	r30, 0x9D	; 157
     6e8:	f0 e0       	ldi	r31, 0x00	; 0
     6ea:	80 81       	ld	r24, Z
     6ec:	86 60       	ori	r24, 0x06	; 6
     6ee:	80 83       	st	Z, r24
     6f0:	08 95       	ret

000006f2 <_ZN4UART9IsTxReadyEv>:
     6f2:	fc 01       	movw	r30, r24
     6f4:	80 81       	ld	r24, Z
     6f6:	81 11       	cpse	r24, r1
     6f8:	03 c0       	rjmp	.+6      	; 0x700 <_ZN4UART9IsTxReadyEv+0xe>
     6fa:	8b b1       	in	r24, 0x0b	; 11
     6fc:	80 72       	andi	r24, 0x20	; 32
     6fe:	08 95       	ret
     700:	81 30       	cpi	r24, 0x01	; 1
     702:	21 f4       	brne	.+8      	; 0x70c <_ZN4UART9IsTxReadyEv+0x1a>
     704:	80 91 9b 00 	lds	r24, 0x009B	; 0x80009b <__TEXT_REGION_LENGTH__+0x7e009b>
     708:	80 72       	andi	r24, 0x20	; 32
     70a:	08 95       	ret
     70c:	08 95       	ret

0000070e <_ZN4UART6TxCharEc>:
     70e:	1f 93       	push	r17
     710:	cf 93       	push	r28
     712:	df 93       	push	r29
     714:	ec 01       	movw	r28, r24
     716:	16 2f       	mov	r17, r22
     718:	ce 01       	movw	r24, r28
     71a:	eb df       	rcall	.-42     	; 0x6f2 <_ZN4UART9IsTxReadyEv>
     71c:	88 23       	and	r24, r24
     71e:	e1 f3       	breq	.-8      	; 0x718 <_ZN4UART6TxCharEc+0xa>
     720:	88 81       	ld	r24, Y
     722:	81 11       	cpse	r24, r1
     724:	03 c0       	rjmp	.+6      	; 0x72c <_ZN4UART6TxCharEc+0x1e>
     726:	1c b9       	out	0x0c, r17	; 12
     728:	5d 9a       	sbi	0x0b, 5	; 11
     72a:	09 c0       	rjmp	.+18     	; 0x73e <_ZN4UART6TxCharEc+0x30>
     72c:	81 30       	cpi	r24, 0x01	; 1
     72e:	39 f4       	brne	.+14     	; 0x73e <_ZN4UART6TxCharEc+0x30>
     730:	10 93 9c 00 	sts	0x009C, r17	; 0x80009c <__TEXT_REGION_LENGTH__+0x7e009c>
     734:	eb e9       	ldi	r30, 0x9B	; 155
     736:	f0 e0       	ldi	r31, 0x00	; 0
     738:	80 81       	ld	r24, Z
     73a:	80 62       	ori	r24, 0x20	; 32
     73c:	80 83       	st	Z, r24
     73e:	df 91       	pop	r29
     740:	cf 91       	pop	r28
     742:	1f 91       	pop	r17
     744:	08 95       	ret

00000746 <_ZN4UART8TxStringEPc>:

void UART::TxString(char *str)
{
     746:	0f 93       	push	r16
     748:	1f 93       	push	r17
     74a:	cf 93       	push	r28
     74c:	df 93       	push	r29
     74e:	eb 01       	movw	r28, r22
	int i = 0;
	while(str[i] != 0)
     750:	68 81       	ld	r22, Y
     752:	66 23       	and	r22, r22
     754:	39 f0       	breq	.+14     	; 0x764 <_ZN4UART8TxStringEPc+0x1e>
     756:	8c 01       	movw	r16, r24
     758:	21 96       	adiw	r28, 0x01	; 1
	{
		TxChar(str[i]);
     75a:	c8 01       	movw	r24, r16
     75c:	d8 df       	rcall	.-80     	; 0x70e <_ZN4UART6TxCharEc>
}

void UART::TxString(char *str)
{
	int i = 0;
	while(str[i] != 0)
     75e:	69 91       	ld	r22, Y+
     760:	61 11       	cpse	r22, r1
     762:	fb cf       	rjmp	.-10     	; 0x75a <_ZN4UART8TxStringEPc+0x14>
	{
		TxChar(str[i]);
		i++;
	}
}
     764:	df 91       	pop	r29
     766:	cf 91       	pop	r28
     768:	1f 91       	pop	r17
     76a:	0f 91       	pop	r16
     76c:	08 95       	ret

0000076e <_ZN11ultra_sonic16ultra_sonic_initEv>:




void ultra_sonic::ultra_sonic_init(void){
	ultra_sonic_ddr |= (1<< trigger_pin_ddr);
     76e:	16 9a       	sbi	0x02, 6	; 2
	ultra_sonic_ddr &= ~(1<<echo_pin_ddr);
     770:	17 98       	cbi	0x02, 7	; 2
	TCCR3B |= (1<<CS32) | (1<<CS30); //분주비 1024
     772:	ea e8       	ldi	r30, 0x8A	; 138
     774:	f0 e0       	ldi	r31, 0x00	; 0
     776:	80 81       	ld	r24, Z
     778:	85 60       	ori	r24, 0x05	; 5
     77a:	80 83       	st	Z, r24
     77c:	08 95       	ret

0000077e <__divsf3>:
     77e:	0c d0       	rcall	.+24     	; 0x798 <__divsf3x>
     780:	eb c0       	rjmp	.+470    	; 0x958 <__fp_round>
     782:	e3 d0       	rcall	.+454    	; 0x94a <__fp_pscB>
     784:	40 f0       	brcs	.+16     	; 0x796 <__divsf3+0x18>
     786:	da d0       	rcall	.+436    	; 0x93c <__fp_pscA>
     788:	30 f0       	brcs	.+12     	; 0x796 <__divsf3+0x18>
     78a:	21 f4       	brne	.+8      	; 0x794 <__divsf3+0x16>
     78c:	5f 3f       	cpi	r21, 0xFF	; 255
     78e:	19 f0       	breq	.+6      	; 0x796 <__divsf3+0x18>
     790:	cc c0       	rjmp	.+408    	; 0x92a <__fp_inf>
     792:	51 11       	cpse	r21, r1
     794:	15 c1       	rjmp	.+554    	; 0x9c0 <__fp_szero>
     796:	cf c0       	rjmp	.+414    	; 0x936 <__fp_nan>

00000798 <__divsf3x>:
     798:	f0 d0       	rcall	.+480    	; 0x97a <__fp_split3>
     79a:	98 f3       	brcs	.-26     	; 0x782 <__divsf3+0x4>

0000079c <__divsf3_pse>:
     79c:	99 23       	and	r25, r25
     79e:	c9 f3       	breq	.-14     	; 0x792 <__divsf3+0x14>
     7a0:	55 23       	and	r21, r21
     7a2:	b1 f3       	breq	.-20     	; 0x790 <__divsf3+0x12>
     7a4:	95 1b       	sub	r25, r21
     7a6:	55 0b       	sbc	r21, r21
     7a8:	bb 27       	eor	r27, r27
     7aa:	aa 27       	eor	r26, r26
     7ac:	62 17       	cp	r22, r18
     7ae:	73 07       	cpc	r23, r19
     7b0:	84 07       	cpc	r24, r20
     7b2:	38 f0       	brcs	.+14     	; 0x7c2 <__divsf3_pse+0x26>
     7b4:	9f 5f       	subi	r25, 0xFF	; 255
     7b6:	5f 4f       	sbci	r21, 0xFF	; 255
     7b8:	22 0f       	add	r18, r18
     7ba:	33 1f       	adc	r19, r19
     7bc:	44 1f       	adc	r20, r20
     7be:	aa 1f       	adc	r26, r26
     7c0:	a9 f3       	breq	.-22     	; 0x7ac <__divsf3_pse+0x10>
     7c2:	33 d0       	rcall	.+102    	; 0x82a <__divsf3_pse+0x8e>
     7c4:	0e 2e       	mov	r0, r30
     7c6:	3a f0       	brmi	.+14     	; 0x7d6 <__divsf3_pse+0x3a>
     7c8:	e0 e8       	ldi	r30, 0x80	; 128
     7ca:	30 d0       	rcall	.+96     	; 0x82c <__divsf3_pse+0x90>
     7cc:	91 50       	subi	r25, 0x01	; 1
     7ce:	50 40       	sbci	r21, 0x00	; 0
     7d0:	e6 95       	lsr	r30
     7d2:	00 1c       	adc	r0, r0
     7d4:	ca f7       	brpl	.-14     	; 0x7c8 <__divsf3_pse+0x2c>
     7d6:	29 d0       	rcall	.+82     	; 0x82a <__divsf3_pse+0x8e>
     7d8:	fe 2f       	mov	r31, r30
     7da:	27 d0       	rcall	.+78     	; 0x82a <__divsf3_pse+0x8e>
     7dc:	66 0f       	add	r22, r22
     7de:	77 1f       	adc	r23, r23
     7e0:	88 1f       	adc	r24, r24
     7e2:	bb 1f       	adc	r27, r27
     7e4:	26 17       	cp	r18, r22
     7e6:	37 07       	cpc	r19, r23
     7e8:	48 07       	cpc	r20, r24
     7ea:	ab 07       	cpc	r26, r27
     7ec:	b0 e8       	ldi	r27, 0x80	; 128
     7ee:	09 f0       	breq	.+2      	; 0x7f2 <__divsf3_pse+0x56>
     7f0:	bb 0b       	sbc	r27, r27
     7f2:	80 2d       	mov	r24, r0
     7f4:	bf 01       	movw	r22, r30
     7f6:	ff 27       	eor	r31, r31
     7f8:	93 58       	subi	r25, 0x83	; 131
     7fa:	5f 4f       	sbci	r21, 0xFF	; 255
     7fc:	2a f0       	brmi	.+10     	; 0x808 <__divsf3_pse+0x6c>
     7fe:	9e 3f       	cpi	r25, 0xFE	; 254
     800:	51 05       	cpc	r21, r1
     802:	68 f0       	brcs	.+26     	; 0x81e <__divsf3_pse+0x82>
     804:	92 c0       	rjmp	.+292    	; 0x92a <__fp_inf>
     806:	dc c0       	rjmp	.+440    	; 0x9c0 <__fp_szero>
     808:	5f 3f       	cpi	r21, 0xFF	; 255
     80a:	ec f3       	brlt	.-6      	; 0x806 <__divsf3_pse+0x6a>
     80c:	98 3e       	cpi	r25, 0xE8	; 232
     80e:	dc f3       	brlt	.-10     	; 0x806 <__divsf3_pse+0x6a>
     810:	86 95       	lsr	r24
     812:	77 95       	ror	r23
     814:	67 95       	ror	r22
     816:	b7 95       	ror	r27
     818:	f7 95       	ror	r31
     81a:	9f 5f       	subi	r25, 0xFF	; 255
     81c:	c9 f7       	brne	.-14     	; 0x810 <__divsf3_pse+0x74>
     81e:	88 0f       	add	r24, r24
     820:	91 1d       	adc	r25, r1
     822:	96 95       	lsr	r25
     824:	87 95       	ror	r24
     826:	97 f9       	bld	r25, 7
     828:	08 95       	ret
     82a:	e1 e0       	ldi	r30, 0x01	; 1
     82c:	66 0f       	add	r22, r22
     82e:	77 1f       	adc	r23, r23
     830:	88 1f       	adc	r24, r24
     832:	bb 1f       	adc	r27, r27
     834:	62 17       	cp	r22, r18
     836:	73 07       	cpc	r23, r19
     838:	84 07       	cpc	r24, r20
     83a:	ba 07       	cpc	r27, r26
     83c:	20 f0       	brcs	.+8      	; 0x846 <__divsf3_pse+0xaa>
     83e:	62 1b       	sub	r22, r18
     840:	73 0b       	sbc	r23, r19
     842:	84 0b       	sbc	r24, r20
     844:	ba 0b       	sbc	r27, r26
     846:	ee 1f       	adc	r30, r30
     848:	88 f7       	brcc	.-30     	; 0x82c <__divsf3_pse+0x90>
     84a:	e0 95       	com	r30
     84c:	08 95       	ret

0000084e <__fixsfsi>:
     84e:	04 d0       	rcall	.+8      	; 0x858 <__fixunssfsi>
     850:	68 94       	set
     852:	b1 11       	cpse	r27, r1
     854:	b5 c0       	rjmp	.+362    	; 0x9c0 <__fp_szero>
     856:	08 95       	ret

00000858 <__fixunssfsi>:
     858:	98 d0       	rcall	.+304    	; 0x98a <__fp_splitA>
     85a:	88 f0       	brcs	.+34     	; 0x87e <__fixunssfsi+0x26>
     85c:	9f 57       	subi	r25, 0x7F	; 127
     85e:	90 f0       	brcs	.+36     	; 0x884 <__fixunssfsi+0x2c>
     860:	b9 2f       	mov	r27, r25
     862:	99 27       	eor	r25, r25
     864:	b7 51       	subi	r27, 0x17	; 23
     866:	a0 f0       	brcs	.+40     	; 0x890 <__fixunssfsi+0x38>
     868:	d1 f0       	breq	.+52     	; 0x89e <__fixunssfsi+0x46>
     86a:	66 0f       	add	r22, r22
     86c:	77 1f       	adc	r23, r23
     86e:	88 1f       	adc	r24, r24
     870:	99 1f       	adc	r25, r25
     872:	1a f0       	brmi	.+6      	; 0x87a <__fixunssfsi+0x22>
     874:	ba 95       	dec	r27
     876:	c9 f7       	brne	.-14     	; 0x86a <__fixunssfsi+0x12>
     878:	12 c0       	rjmp	.+36     	; 0x89e <__fixunssfsi+0x46>
     87a:	b1 30       	cpi	r27, 0x01	; 1
     87c:	81 f0       	breq	.+32     	; 0x89e <__fixunssfsi+0x46>
     87e:	9f d0       	rcall	.+318    	; 0x9be <__fp_zero>
     880:	b1 e0       	ldi	r27, 0x01	; 1
     882:	08 95       	ret
     884:	9c c0       	rjmp	.+312    	; 0x9be <__fp_zero>
     886:	67 2f       	mov	r22, r23
     888:	78 2f       	mov	r23, r24
     88a:	88 27       	eor	r24, r24
     88c:	b8 5f       	subi	r27, 0xF8	; 248
     88e:	39 f0       	breq	.+14     	; 0x89e <__fixunssfsi+0x46>
     890:	b9 3f       	cpi	r27, 0xF9	; 249
     892:	cc f3       	brlt	.-14     	; 0x886 <__fixunssfsi+0x2e>
     894:	86 95       	lsr	r24
     896:	77 95       	ror	r23
     898:	67 95       	ror	r22
     89a:	b3 95       	inc	r27
     89c:	d9 f7       	brne	.-10     	; 0x894 <__fixunssfsi+0x3c>
     89e:	3e f4       	brtc	.+14     	; 0x8ae <__fixunssfsi+0x56>
     8a0:	90 95       	com	r25
     8a2:	80 95       	com	r24
     8a4:	70 95       	com	r23
     8a6:	61 95       	neg	r22
     8a8:	7f 4f       	sbci	r23, 0xFF	; 255
     8aa:	8f 4f       	sbci	r24, 0xFF	; 255
     8ac:	9f 4f       	sbci	r25, 0xFF	; 255
     8ae:	08 95       	ret

000008b0 <__floatunsisf>:
     8b0:	e8 94       	clt
     8b2:	09 c0       	rjmp	.+18     	; 0x8c6 <__floatsisf+0x12>

000008b4 <__floatsisf>:
     8b4:	97 fb       	bst	r25, 7
     8b6:	3e f4       	brtc	.+14     	; 0x8c6 <__floatsisf+0x12>
     8b8:	90 95       	com	r25
     8ba:	80 95       	com	r24
     8bc:	70 95       	com	r23
     8be:	61 95       	neg	r22
     8c0:	7f 4f       	sbci	r23, 0xFF	; 255
     8c2:	8f 4f       	sbci	r24, 0xFF	; 255
     8c4:	9f 4f       	sbci	r25, 0xFF	; 255
     8c6:	99 23       	and	r25, r25
     8c8:	a9 f0       	breq	.+42     	; 0x8f4 <__floatsisf+0x40>
     8ca:	f9 2f       	mov	r31, r25
     8cc:	96 e9       	ldi	r25, 0x96	; 150
     8ce:	bb 27       	eor	r27, r27
     8d0:	93 95       	inc	r25
     8d2:	f6 95       	lsr	r31
     8d4:	87 95       	ror	r24
     8d6:	77 95       	ror	r23
     8d8:	67 95       	ror	r22
     8da:	b7 95       	ror	r27
     8dc:	f1 11       	cpse	r31, r1
     8de:	f8 cf       	rjmp	.-16     	; 0x8d0 <__floatsisf+0x1c>
     8e0:	fa f4       	brpl	.+62     	; 0x920 <__floatsisf+0x6c>
     8e2:	bb 0f       	add	r27, r27
     8e4:	11 f4       	brne	.+4      	; 0x8ea <__floatsisf+0x36>
     8e6:	60 ff       	sbrs	r22, 0
     8e8:	1b c0       	rjmp	.+54     	; 0x920 <__floatsisf+0x6c>
     8ea:	6f 5f       	subi	r22, 0xFF	; 255
     8ec:	7f 4f       	sbci	r23, 0xFF	; 255
     8ee:	8f 4f       	sbci	r24, 0xFF	; 255
     8f0:	9f 4f       	sbci	r25, 0xFF	; 255
     8f2:	16 c0       	rjmp	.+44     	; 0x920 <__floatsisf+0x6c>
     8f4:	88 23       	and	r24, r24
     8f6:	11 f0       	breq	.+4      	; 0x8fc <__floatsisf+0x48>
     8f8:	96 e9       	ldi	r25, 0x96	; 150
     8fa:	11 c0       	rjmp	.+34     	; 0x91e <__floatsisf+0x6a>
     8fc:	77 23       	and	r23, r23
     8fe:	21 f0       	breq	.+8      	; 0x908 <__floatsisf+0x54>
     900:	9e e8       	ldi	r25, 0x8E	; 142
     902:	87 2f       	mov	r24, r23
     904:	76 2f       	mov	r23, r22
     906:	05 c0       	rjmp	.+10     	; 0x912 <__floatsisf+0x5e>
     908:	66 23       	and	r22, r22
     90a:	71 f0       	breq	.+28     	; 0x928 <__floatsisf+0x74>
     90c:	96 e8       	ldi	r25, 0x86	; 134
     90e:	86 2f       	mov	r24, r22
     910:	70 e0       	ldi	r23, 0x00	; 0
     912:	60 e0       	ldi	r22, 0x00	; 0
     914:	2a f0       	brmi	.+10     	; 0x920 <__floatsisf+0x6c>
     916:	9a 95       	dec	r25
     918:	66 0f       	add	r22, r22
     91a:	77 1f       	adc	r23, r23
     91c:	88 1f       	adc	r24, r24
     91e:	da f7       	brpl	.-10     	; 0x916 <__floatsisf+0x62>
     920:	88 0f       	add	r24, r24
     922:	96 95       	lsr	r25
     924:	87 95       	ror	r24
     926:	97 f9       	bld	r25, 7
     928:	08 95       	ret

0000092a <__fp_inf>:
     92a:	97 f9       	bld	r25, 7
     92c:	9f 67       	ori	r25, 0x7F	; 127
     92e:	80 e8       	ldi	r24, 0x80	; 128
     930:	70 e0       	ldi	r23, 0x00	; 0
     932:	60 e0       	ldi	r22, 0x00	; 0
     934:	08 95       	ret

00000936 <__fp_nan>:
     936:	9f ef       	ldi	r25, 0xFF	; 255
     938:	80 ec       	ldi	r24, 0xC0	; 192
     93a:	08 95       	ret

0000093c <__fp_pscA>:
     93c:	00 24       	eor	r0, r0
     93e:	0a 94       	dec	r0
     940:	16 16       	cp	r1, r22
     942:	17 06       	cpc	r1, r23
     944:	18 06       	cpc	r1, r24
     946:	09 06       	cpc	r0, r25
     948:	08 95       	ret

0000094a <__fp_pscB>:
     94a:	00 24       	eor	r0, r0
     94c:	0a 94       	dec	r0
     94e:	12 16       	cp	r1, r18
     950:	13 06       	cpc	r1, r19
     952:	14 06       	cpc	r1, r20
     954:	05 06       	cpc	r0, r21
     956:	08 95       	ret

00000958 <__fp_round>:
     958:	09 2e       	mov	r0, r25
     95a:	03 94       	inc	r0
     95c:	00 0c       	add	r0, r0
     95e:	11 f4       	brne	.+4      	; 0x964 <__fp_round+0xc>
     960:	88 23       	and	r24, r24
     962:	52 f0       	brmi	.+20     	; 0x978 <__fp_round+0x20>
     964:	bb 0f       	add	r27, r27
     966:	40 f4       	brcc	.+16     	; 0x978 <__fp_round+0x20>
     968:	bf 2b       	or	r27, r31
     96a:	11 f4       	brne	.+4      	; 0x970 <__fp_round+0x18>
     96c:	60 ff       	sbrs	r22, 0
     96e:	04 c0       	rjmp	.+8      	; 0x978 <__fp_round+0x20>
     970:	6f 5f       	subi	r22, 0xFF	; 255
     972:	7f 4f       	sbci	r23, 0xFF	; 255
     974:	8f 4f       	sbci	r24, 0xFF	; 255
     976:	9f 4f       	sbci	r25, 0xFF	; 255
     978:	08 95       	ret

0000097a <__fp_split3>:
     97a:	57 fd       	sbrc	r21, 7
     97c:	90 58       	subi	r25, 0x80	; 128
     97e:	44 0f       	add	r20, r20
     980:	55 1f       	adc	r21, r21
     982:	59 f0       	breq	.+22     	; 0x99a <__fp_splitA+0x10>
     984:	5f 3f       	cpi	r21, 0xFF	; 255
     986:	71 f0       	breq	.+28     	; 0x9a4 <__fp_splitA+0x1a>
     988:	47 95       	ror	r20

0000098a <__fp_splitA>:
     98a:	88 0f       	add	r24, r24
     98c:	97 fb       	bst	r25, 7
     98e:	99 1f       	adc	r25, r25
     990:	61 f0       	breq	.+24     	; 0x9aa <__fp_splitA+0x20>
     992:	9f 3f       	cpi	r25, 0xFF	; 255
     994:	79 f0       	breq	.+30     	; 0x9b4 <__fp_splitA+0x2a>
     996:	87 95       	ror	r24
     998:	08 95       	ret
     99a:	12 16       	cp	r1, r18
     99c:	13 06       	cpc	r1, r19
     99e:	14 06       	cpc	r1, r20
     9a0:	55 1f       	adc	r21, r21
     9a2:	f2 cf       	rjmp	.-28     	; 0x988 <__fp_split3+0xe>
     9a4:	46 95       	lsr	r20
     9a6:	f1 df       	rcall	.-30     	; 0x98a <__fp_splitA>
     9a8:	08 c0       	rjmp	.+16     	; 0x9ba <__fp_splitA+0x30>
     9aa:	16 16       	cp	r1, r22
     9ac:	17 06       	cpc	r1, r23
     9ae:	18 06       	cpc	r1, r24
     9b0:	99 1f       	adc	r25, r25
     9b2:	f1 cf       	rjmp	.-30     	; 0x996 <__fp_splitA+0xc>
     9b4:	86 95       	lsr	r24
     9b6:	71 05       	cpc	r23, r1
     9b8:	61 05       	cpc	r22, r1
     9ba:	08 94       	sec
     9bc:	08 95       	ret

000009be <__fp_zero>:
     9be:	e8 94       	clt

000009c0 <__fp_szero>:
     9c0:	bb 27       	eor	r27, r27
     9c2:	66 27       	eor	r22, r22
     9c4:	77 27       	eor	r23, r23
     9c6:	cb 01       	movw	r24, r22
     9c8:	97 f9       	bld	r25, 7
     9ca:	08 95       	ret

000009cc <__mulsf3>:
     9cc:	0b d0       	rcall	.+22     	; 0x9e4 <__mulsf3x>
     9ce:	c4 cf       	rjmp	.-120    	; 0x958 <__fp_round>
     9d0:	b5 df       	rcall	.-150    	; 0x93c <__fp_pscA>
     9d2:	28 f0       	brcs	.+10     	; 0x9de <__mulsf3+0x12>
     9d4:	ba df       	rcall	.-140    	; 0x94a <__fp_pscB>
     9d6:	18 f0       	brcs	.+6      	; 0x9de <__mulsf3+0x12>
     9d8:	95 23       	and	r25, r21
     9da:	09 f0       	breq	.+2      	; 0x9de <__mulsf3+0x12>
     9dc:	a6 cf       	rjmp	.-180    	; 0x92a <__fp_inf>
     9de:	ab cf       	rjmp	.-170    	; 0x936 <__fp_nan>
     9e0:	11 24       	eor	r1, r1
     9e2:	ee cf       	rjmp	.-36     	; 0x9c0 <__fp_szero>

000009e4 <__mulsf3x>:
     9e4:	ca df       	rcall	.-108    	; 0x97a <__fp_split3>
     9e6:	a0 f3       	brcs	.-24     	; 0x9d0 <__mulsf3+0x4>

000009e8 <__mulsf3_pse>:
     9e8:	95 9f       	mul	r25, r21
     9ea:	d1 f3       	breq	.-12     	; 0x9e0 <__mulsf3+0x14>
     9ec:	95 0f       	add	r25, r21
     9ee:	50 e0       	ldi	r21, 0x00	; 0
     9f0:	55 1f       	adc	r21, r21
     9f2:	62 9f       	mul	r22, r18
     9f4:	f0 01       	movw	r30, r0
     9f6:	72 9f       	mul	r23, r18
     9f8:	bb 27       	eor	r27, r27
     9fa:	f0 0d       	add	r31, r0
     9fc:	b1 1d       	adc	r27, r1
     9fe:	63 9f       	mul	r22, r19
     a00:	aa 27       	eor	r26, r26
     a02:	f0 0d       	add	r31, r0
     a04:	b1 1d       	adc	r27, r1
     a06:	aa 1f       	adc	r26, r26
     a08:	64 9f       	mul	r22, r20
     a0a:	66 27       	eor	r22, r22
     a0c:	b0 0d       	add	r27, r0
     a0e:	a1 1d       	adc	r26, r1
     a10:	66 1f       	adc	r22, r22
     a12:	82 9f       	mul	r24, r18
     a14:	22 27       	eor	r18, r18
     a16:	b0 0d       	add	r27, r0
     a18:	a1 1d       	adc	r26, r1
     a1a:	62 1f       	adc	r22, r18
     a1c:	73 9f       	mul	r23, r19
     a1e:	b0 0d       	add	r27, r0
     a20:	a1 1d       	adc	r26, r1
     a22:	62 1f       	adc	r22, r18
     a24:	83 9f       	mul	r24, r19
     a26:	a0 0d       	add	r26, r0
     a28:	61 1d       	adc	r22, r1
     a2a:	22 1f       	adc	r18, r18
     a2c:	74 9f       	mul	r23, r20
     a2e:	33 27       	eor	r19, r19
     a30:	a0 0d       	add	r26, r0
     a32:	61 1d       	adc	r22, r1
     a34:	23 1f       	adc	r18, r19
     a36:	84 9f       	mul	r24, r20
     a38:	60 0d       	add	r22, r0
     a3a:	21 1d       	adc	r18, r1
     a3c:	82 2f       	mov	r24, r18
     a3e:	76 2f       	mov	r23, r22
     a40:	6a 2f       	mov	r22, r26
     a42:	11 24       	eor	r1, r1
     a44:	9f 57       	subi	r25, 0x7F	; 127
     a46:	50 40       	sbci	r21, 0x00	; 0
     a48:	8a f0       	brmi	.+34     	; 0xa6c <__mulsf3_pse+0x84>
     a4a:	e1 f0       	breq	.+56     	; 0xa84 <__mulsf3_pse+0x9c>
     a4c:	88 23       	and	r24, r24
     a4e:	4a f0       	brmi	.+18     	; 0xa62 <__mulsf3_pse+0x7a>
     a50:	ee 0f       	add	r30, r30
     a52:	ff 1f       	adc	r31, r31
     a54:	bb 1f       	adc	r27, r27
     a56:	66 1f       	adc	r22, r22
     a58:	77 1f       	adc	r23, r23
     a5a:	88 1f       	adc	r24, r24
     a5c:	91 50       	subi	r25, 0x01	; 1
     a5e:	50 40       	sbci	r21, 0x00	; 0
     a60:	a9 f7       	brne	.-22     	; 0xa4c <__mulsf3_pse+0x64>
     a62:	9e 3f       	cpi	r25, 0xFE	; 254
     a64:	51 05       	cpc	r21, r1
     a66:	70 f0       	brcs	.+28     	; 0xa84 <__mulsf3_pse+0x9c>
     a68:	60 cf       	rjmp	.-320    	; 0x92a <__fp_inf>
     a6a:	aa cf       	rjmp	.-172    	; 0x9c0 <__fp_szero>
     a6c:	5f 3f       	cpi	r21, 0xFF	; 255
     a6e:	ec f3       	brlt	.-6      	; 0xa6a <__mulsf3_pse+0x82>
     a70:	98 3e       	cpi	r25, 0xE8	; 232
     a72:	dc f3       	brlt	.-10     	; 0xa6a <__mulsf3_pse+0x82>
     a74:	86 95       	lsr	r24
     a76:	77 95       	ror	r23
     a78:	67 95       	ror	r22
     a7a:	b7 95       	ror	r27
     a7c:	f7 95       	ror	r31
     a7e:	e7 95       	ror	r30
     a80:	9f 5f       	subi	r25, 0xFF	; 255
     a82:	c1 f7       	brne	.-16     	; 0xa74 <__mulsf3_pse+0x8c>
     a84:	fe 2b       	or	r31, r30
     a86:	88 0f       	add	r24, r24
     a88:	91 1d       	adc	r25, r1
     a8a:	96 95       	lsr	r25
     a8c:	87 95       	ror	r24
     a8e:	97 f9       	bld	r25, 7
     a90:	08 95       	ret

00000a92 <__tablejump2__>:
     a92:	ee 0f       	add	r30, r30
     a94:	ff 1f       	adc	r31, r31
     a96:	00 24       	eor	r0, r0
     a98:	00 1c       	adc	r0, r0
     a9a:	0b be       	out	0x3b, r0	; 59
     a9c:	07 90       	elpm	r0, Z+
     a9e:	f6 91       	elpm	r31, Z
     aa0:	e0 2d       	mov	r30, r0
     aa2:	09 94       	ijmp

00000aa4 <sprintf>:
     aa4:	0f 93       	push	r16
     aa6:	1f 93       	push	r17
     aa8:	cf 93       	push	r28
     aaa:	df 93       	push	r29
     aac:	cd b7       	in	r28, 0x3d	; 61
     aae:	de b7       	in	r29, 0x3e	; 62
     ab0:	2e 97       	sbiw	r28, 0x0e	; 14
     ab2:	0f b6       	in	r0, 0x3f	; 63
     ab4:	f8 94       	cli
     ab6:	de bf       	out	0x3e, r29	; 62
     ab8:	0f be       	out	0x3f, r0	; 63
     aba:	cd bf       	out	0x3d, r28	; 61
     abc:	0d 89       	ldd	r16, Y+21	; 0x15
     abe:	1e 89       	ldd	r17, Y+22	; 0x16
     ac0:	86 e0       	ldi	r24, 0x06	; 6
     ac2:	8c 83       	std	Y+4, r24	; 0x04
     ac4:	1a 83       	std	Y+2, r17	; 0x02
     ac6:	09 83       	std	Y+1, r16	; 0x01
     ac8:	8f ef       	ldi	r24, 0xFF	; 255
     aca:	9f e7       	ldi	r25, 0x7F	; 127
     acc:	9e 83       	std	Y+6, r25	; 0x06
     ace:	8d 83       	std	Y+5, r24	; 0x05
     ad0:	ae 01       	movw	r20, r28
     ad2:	47 5e       	subi	r20, 0xE7	; 231
     ad4:	5f 4f       	sbci	r21, 0xFF	; 255
     ad6:	6f 89       	ldd	r22, Y+23	; 0x17
     ad8:	78 8d       	ldd	r23, Y+24	; 0x18
     ada:	ce 01       	movw	r24, r28
     adc:	01 96       	adiw	r24, 0x01	; 1
     ade:	10 d0       	rcall	.+32     	; 0xb00 <vfprintf>
     ae0:	ef 81       	ldd	r30, Y+7	; 0x07
     ae2:	f8 85       	ldd	r31, Y+8	; 0x08
     ae4:	e0 0f       	add	r30, r16
     ae6:	f1 1f       	adc	r31, r17
     ae8:	10 82       	st	Z, r1
     aea:	2e 96       	adiw	r28, 0x0e	; 14
     aec:	0f b6       	in	r0, 0x3f	; 63
     aee:	f8 94       	cli
     af0:	de bf       	out	0x3e, r29	; 62
     af2:	0f be       	out	0x3f, r0	; 63
     af4:	cd bf       	out	0x3d, r28	; 61
     af6:	df 91       	pop	r29
     af8:	cf 91       	pop	r28
     afa:	1f 91       	pop	r17
     afc:	0f 91       	pop	r16
     afe:	08 95       	ret

00000b00 <vfprintf>:
     b00:	2f 92       	push	r2
     b02:	3f 92       	push	r3
     b04:	4f 92       	push	r4
     b06:	5f 92       	push	r5
     b08:	6f 92       	push	r6
     b0a:	7f 92       	push	r7
     b0c:	8f 92       	push	r8
     b0e:	9f 92       	push	r9
     b10:	af 92       	push	r10
     b12:	bf 92       	push	r11
     b14:	cf 92       	push	r12
     b16:	df 92       	push	r13
     b18:	ef 92       	push	r14
     b1a:	ff 92       	push	r15
     b1c:	0f 93       	push	r16
     b1e:	1f 93       	push	r17
     b20:	cf 93       	push	r28
     b22:	df 93       	push	r29
     b24:	cd b7       	in	r28, 0x3d	; 61
     b26:	de b7       	in	r29, 0x3e	; 62
     b28:	2b 97       	sbiw	r28, 0x0b	; 11
     b2a:	0f b6       	in	r0, 0x3f	; 63
     b2c:	f8 94       	cli
     b2e:	de bf       	out	0x3e, r29	; 62
     b30:	0f be       	out	0x3f, r0	; 63
     b32:	cd bf       	out	0x3d, r28	; 61
     b34:	6c 01       	movw	r12, r24
     b36:	7b 01       	movw	r14, r22
     b38:	8a 01       	movw	r16, r20
     b3a:	fc 01       	movw	r30, r24
     b3c:	17 82       	std	Z+7, r1	; 0x07
     b3e:	16 82       	std	Z+6, r1	; 0x06
     b40:	83 81       	ldd	r24, Z+3	; 0x03
     b42:	81 ff       	sbrs	r24, 1
     b44:	bf c1       	rjmp	.+894    	; 0xec4 <vfprintf+0x3c4>
     b46:	ce 01       	movw	r24, r28
     b48:	01 96       	adiw	r24, 0x01	; 1
     b4a:	3c 01       	movw	r6, r24
     b4c:	f6 01       	movw	r30, r12
     b4e:	93 81       	ldd	r25, Z+3	; 0x03
     b50:	f7 01       	movw	r30, r14
     b52:	93 fd       	sbrc	r25, 3
     b54:	85 91       	lpm	r24, Z+
     b56:	93 ff       	sbrs	r25, 3
     b58:	81 91       	ld	r24, Z+
     b5a:	7f 01       	movw	r14, r30
     b5c:	88 23       	and	r24, r24
     b5e:	09 f4       	brne	.+2      	; 0xb62 <vfprintf+0x62>
     b60:	ad c1       	rjmp	.+858    	; 0xebc <vfprintf+0x3bc>
     b62:	85 32       	cpi	r24, 0x25	; 37
     b64:	39 f4       	brne	.+14     	; 0xb74 <vfprintf+0x74>
     b66:	93 fd       	sbrc	r25, 3
     b68:	85 91       	lpm	r24, Z+
     b6a:	93 ff       	sbrs	r25, 3
     b6c:	81 91       	ld	r24, Z+
     b6e:	7f 01       	movw	r14, r30
     b70:	85 32       	cpi	r24, 0x25	; 37
     b72:	21 f4       	brne	.+8      	; 0xb7c <vfprintf+0x7c>
     b74:	b6 01       	movw	r22, r12
     b76:	90 e0       	ldi	r25, 0x00	; 0
     b78:	d6 d1       	rcall	.+940    	; 0xf26 <fputc>
     b7a:	e8 cf       	rjmp	.-48     	; 0xb4c <vfprintf+0x4c>
     b7c:	91 2c       	mov	r9, r1
     b7e:	21 2c       	mov	r2, r1
     b80:	31 2c       	mov	r3, r1
     b82:	ff e1       	ldi	r31, 0x1F	; 31
     b84:	f3 15       	cp	r31, r3
     b86:	d8 f0       	brcs	.+54     	; 0xbbe <vfprintf+0xbe>
     b88:	8b 32       	cpi	r24, 0x2B	; 43
     b8a:	79 f0       	breq	.+30     	; 0xbaa <vfprintf+0xaa>
     b8c:	38 f4       	brcc	.+14     	; 0xb9c <vfprintf+0x9c>
     b8e:	80 32       	cpi	r24, 0x20	; 32
     b90:	79 f0       	breq	.+30     	; 0xbb0 <vfprintf+0xb0>
     b92:	83 32       	cpi	r24, 0x23	; 35
     b94:	a1 f4       	brne	.+40     	; 0xbbe <vfprintf+0xbe>
     b96:	23 2d       	mov	r18, r3
     b98:	20 61       	ori	r18, 0x10	; 16
     b9a:	1d c0       	rjmp	.+58     	; 0xbd6 <vfprintf+0xd6>
     b9c:	8d 32       	cpi	r24, 0x2D	; 45
     b9e:	61 f0       	breq	.+24     	; 0xbb8 <vfprintf+0xb8>
     ba0:	80 33       	cpi	r24, 0x30	; 48
     ba2:	69 f4       	brne	.+26     	; 0xbbe <vfprintf+0xbe>
     ba4:	23 2d       	mov	r18, r3
     ba6:	21 60       	ori	r18, 0x01	; 1
     ba8:	16 c0       	rjmp	.+44     	; 0xbd6 <vfprintf+0xd6>
     baa:	83 2d       	mov	r24, r3
     bac:	82 60       	ori	r24, 0x02	; 2
     bae:	38 2e       	mov	r3, r24
     bb0:	e3 2d       	mov	r30, r3
     bb2:	e4 60       	ori	r30, 0x04	; 4
     bb4:	3e 2e       	mov	r3, r30
     bb6:	2a c0       	rjmp	.+84     	; 0xc0c <vfprintf+0x10c>
     bb8:	f3 2d       	mov	r31, r3
     bba:	f8 60       	ori	r31, 0x08	; 8
     bbc:	1d c0       	rjmp	.+58     	; 0xbf8 <vfprintf+0xf8>
     bbe:	37 fc       	sbrc	r3, 7
     bc0:	2d c0       	rjmp	.+90     	; 0xc1c <vfprintf+0x11c>
     bc2:	20 ed       	ldi	r18, 0xD0	; 208
     bc4:	28 0f       	add	r18, r24
     bc6:	2a 30       	cpi	r18, 0x0A	; 10
     bc8:	40 f0       	brcs	.+16     	; 0xbda <vfprintf+0xda>
     bca:	8e 32       	cpi	r24, 0x2E	; 46
     bcc:	b9 f4       	brne	.+46     	; 0xbfc <vfprintf+0xfc>
     bce:	36 fc       	sbrc	r3, 6
     bd0:	75 c1       	rjmp	.+746    	; 0xebc <vfprintf+0x3bc>
     bd2:	23 2d       	mov	r18, r3
     bd4:	20 64       	ori	r18, 0x40	; 64
     bd6:	32 2e       	mov	r3, r18
     bd8:	19 c0       	rjmp	.+50     	; 0xc0c <vfprintf+0x10c>
     bda:	36 fe       	sbrs	r3, 6
     bdc:	06 c0       	rjmp	.+12     	; 0xbea <vfprintf+0xea>
     bde:	8a e0       	ldi	r24, 0x0A	; 10
     be0:	98 9e       	mul	r9, r24
     be2:	20 0d       	add	r18, r0
     be4:	11 24       	eor	r1, r1
     be6:	92 2e       	mov	r9, r18
     be8:	11 c0       	rjmp	.+34     	; 0xc0c <vfprintf+0x10c>
     bea:	ea e0       	ldi	r30, 0x0A	; 10
     bec:	2e 9e       	mul	r2, r30
     bee:	20 0d       	add	r18, r0
     bf0:	11 24       	eor	r1, r1
     bf2:	22 2e       	mov	r2, r18
     bf4:	f3 2d       	mov	r31, r3
     bf6:	f0 62       	ori	r31, 0x20	; 32
     bf8:	3f 2e       	mov	r3, r31
     bfa:	08 c0       	rjmp	.+16     	; 0xc0c <vfprintf+0x10c>
     bfc:	8c 36       	cpi	r24, 0x6C	; 108
     bfe:	21 f4       	brne	.+8      	; 0xc08 <vfprintf+0x108>
     c00:	83 2d       	mov	r24, r3
     c02:	80 68       	ori	r24, 0x80	; 128
     c04:	38 2e       	mov	r3, r24
     c06:	02 c0       	rjmp	.+4      	; 0xc0c <vfprintf+0x10c>
     c08:	88 36       	cpi	r24, 0x68	; 104
     c0a:	41 f4       	brne	.+16     	; 0xc1c <vfprintf+0x11c>
     c0c:	f7 01       	movw	r30, r14
     c0e:	93 fd       	sbrc	r25, 3
     c10:	85 91       	lpm	r24, Z+
     c12:	93 ff       	sbrs	r25, 3
     c14:	81 91       	ld	r24, Z+
     c16:	7f 01       	movw	r14, r30
     c18:	81 11       	cpse	r24, r1
     c1a:	b3 cf       	rjmp	.-154    	; 0xb82 <vfprintf+0x82>
     c1c:	98 2f       	mov	r25, r24
     c1e:	9f 7d       	andi	r25, 0xDF	; 223
     c20:	95 54       	subi	r25, 0x45	; 69
     c22:	93 30       	cpi	r25, 0x03	; 3
     c24:	28 f4       	brcc	.+10     	; 0xc30 <vfprintf+0x130>
     c26:	0c 5f       	subi	r16, 0xFC	; 252
     c28:	1f 4f       	sbci	r17, 0xFF	; 255
     c2a:	9f e3       	ldi	r25, 0x3F	; 63
     c2c:	99 83       	std	Y+1, r25	; 0x01
     c2e:	0d c0       	rjmp	.+26     	; 0xc4a <vfprintf+0x14a>
     c30:	83 36       	cpi	r24, 0x63	; 99
     c32:	31 f0       	breq	.+12     	; 0xc40 <vfprintf+0x140>
     c34:	83 37       	cpi	r24, 0x73	; 115
     c36:	71 f0       	breq	.+28     	; 0xc54 <vfprintf+0x154>
     c38:	83 35       	cpi	r24, 0x53	; 83
     c3a:	09 f0       	breq	.+2      	; 0xc3e <vfprintf+0x13e>
     c3c:	55 c0       	rjmp	.+170    	; 0xce8 <vfprintf+0x1e8>
     c3e:	20 c0       	rjmp	.+64     	; 0xc80 <vfprintf+0x180>
     c40:	f8 01       	movw	r30, r16
     c42:	80 81       	ld	r24, Z
     c44:	89 83       	std	Y+1, r24	; 0x01
     c46:	0e 5f       	subi	r16, 0xFE	; 254
     c48:	1f 4f       	sbci	r17, 0xFF	; 255
     c4a:	88 24       	eor	r8, r8
     c4c:	83 94       	inc	r8
     c4e:	91 2c       	mov	r9, r1
     c50:	53 01       	movw	r10, r6
     c52:	12 c0       	rjmp	.+36     	; 0xc78 <vfprintf+0x178>
     c54:	28 01       	movw	r4, r16
     c56:	f2 e0       	ldi	r31, 0x02	; 2
     c58:	4f 0e       	add	r4, r31
     c5a:	51 1c       	adc	r5, r1
     c5c:	f8 01       	movw	r30, r16
     c5e:	a0 80       	ld	r10, Z
     c60:	b1 80       	ldd	r11, Z+1	; 0x01
     c62:	36 fe       	sbrs	r3, 6
     c64:	03 c0       	rjmp	.+6      	; 0xc6c <vfprintf+0x16c>
     c66:	69 2d       	mov	r22, r9
     c68:	70 e0       	ldi	r23, 0x00	; 0
     c6a:	02 c0       	rjmp	.+4      	; 0xc70 <vfprintf+0x170>
     c6c:	6f ef       	ldi	r22, 0xFF	; 255
     c6e:	7f ef       	ldi	r23, 0xFF	; 255
     c70:	c5 01       	movw	r24, r10
     c72:	4e d1       	rcall	.+668    	; 0xf10 <strnlen>
     c74:	4c 01       	movw	r8, r24
     c76:	82 01       	movw	r16, r4
     c78:	f3 2d       	mov	r31, r3
     c7a:	ff 77       	andi	r31, 0x7F	; 127
     c7c:	3f 2e       	mov	r3, r31
     c7e:	15 c0       	rjmp	.+42     	; 0xcaa <vfprintf+0x1aa>
     c80:	28 01       	movw	r4, r16
     c82:	22 e0       	ldi	r18, 0x02	; 2
     c84:	42 0e       	add	r4, r18
     c86:	51 1c       	adc	r5, r1
     c88:	f8 01       	movw	r30, r16
     c8a:	a0 80       	ld	r10, Z
     c8c:	b1 80       	ldd	r11, Z+1	; 0x01
     c8e:	36 fe       	sbrs	r3, 6
     c90:	03 c0       	rjmp	.+6      	; 0xc98 <vfprintf+0x198>
     c92:	69 2d       	mov	r22, r9
     c94:	70 e0       	ldi	r23, 0x00	; 0
     c96:	02 c0       	rjmp	.+4      	; 0xc9c <vfprintf+0x19c>
     c98:	6f ef       	ldi	r22, 0xFF	; 255
     c9a:	7f ef       	ldi	r23, 0xFF	; 255
     c9c:	c5 01       	movw	r24, r10
     c9e:	2d d1       	rcall	.+602    	; 0xefa <strnlen_P>
     ca0:	4c 01       	movw	r8, r24
     ca2:	f3 2d       	mov	r31, r3
     ca4:	f0 68       	ori	r31, 0x80	; 128
     ca6:	3f 2e       	mov	r3, r31
     ca8:	82 01       	movw	r16, r4
     caa:	33 fc       	sbrc	r3, 3
     cac:	19 c0       	rjmp	.+50     	; 0xce0 <vfprintf+0x1e0>
     cae:	82 2d       	mov	r24, r2
     cb0:	90 e0       	ldi	r25, 0x00	; 0
     cb2:	88 16       	cp	r8, r24
     cb4:	99 06       	cpc	r9, r25
     cb6:	a0 f4       	brcc	.+40     	; 0xce0 <vfprintf+0x1e0>
     cb8:	b6 01       	movw	r22, r12
     cba:	80 e2       	ldi	r24, 0x20	; 32
     cbc:	90 e0       	ldi	r25, 0x00	; 0
     cbe:	33 d1       	rcall	.+614    	; 0xf26 <fputc>
     cc0:	2a 94       	dec	r2
     cc2:	f5 cf       	rjmp	.-22     	; 0xcae <vfprintf+0x1ae>
     cc4:	f5 01       	movw	r30, r10
     cc6:	37 fc       	sbrc	r3, 7
     cc8:	85 91       	lpm	r24, Z+
     cca:	37 fe       	sbrs	r3, 7
     ccc:	81 91       	ld	r24, Z+
     cce:	5f 01       	movw	r10, r30
     cd0:	b6 01       	movw	r22, r12
     cd2:	90 e0       	ldi	r25, 0x00	; 0
     cd4:	28 d1       	rcall	.+592    	; 0xf26 <fputc>
     cd6:	21 10       	cpse	r2, r1
     cd8:	2a 94       	dec	r2
     cda:	21 e0       	ldi	r18, 0x01	; 1
     cdc:	82 1a       	sub	r8, r18
     cde:	91 08       	sbc	r9, r1
     ce0:	81 14       	cp	r8, r1
     ce2:	91 04       	cpc	r9, r1
     ce4:	79 f7       	brne	.-34     	; 0xcc4 <vfprintf+0x1c4>
     ce6:	e1 c0       	rjmp	.+450    	; 0xeaa <vfprintf+0x3aa>
     ce8:	84 36       	cpi	r24, 0x64	; 100
     cea:	11 f0       	breq	.+4      	; 0xcf0 <vfprintf+0x1f0>
     cec:	89 36       	cpi	r24, 0x69	; 105
     cee:	39 f5       	brne	.+78     	; 0xd3e <vfprintf+0x23e>
     cf0:	f8 01       	movw	r30, r16
     cf2:	37 fe       	sbrs	r3, 7
     cf4:	07 c0       	rjmp	.+14     	; 0xd04 <vfprintf+0x204>
     cf6:	60 81       	ld	r22, Z
     cf8:	71 81       	ldd	r23, Z+1	; 0x01
     cfa:	82 81       	ldd	r24, Z+2	; 0x02
     cfc:	93 81       	ldd	r25, Z+3	; 0x03
     cfe:	0c 5f       	subi	r16, 0xFC	; 252
     d00:	1f 4f       	sbci	r17, 0xFF	; 255
     d02:	08 c0       	rjmp	.+16     	; 0xd14 <vfprintf+0x214>
     d04:	60 81       	ld	r22, Z
     d06:	71 81       	ldd	r23, Z+1	; 0x01
     d08:	07 2e       	mov	r0, r23
     d0a:	00 0c       	add	r0, r0
     d0c:	88 0b       	sbc	r24, r24
     d0e:	99 0b       	sbc	r25, r25
     d10:	0e 5f       	subi	r16, 0xFE	; 254
     d12:	1f 4f       	sbci	r17, 0xFF	; 255
     d14:	f3 2d       	mov	r31, r3
     d16:	ff 76       	andi	r31, 0x6F	; 111
     d18:	3f 2e       	mov	r3, r31
     d1a:	97 ff       	sbrs	r25, 7
     d1c:	09 c0       	rjmp	.+18     	; 0xd30 <vfprintf+0x230>
     d1e:	90 95       	com	r25
     d20:	80 95       	com	r24
     d22:	70 95       	com	r23
     d24:	61 95       	neg	r22
     d26:	7f 4f       	sbci	r23, 0xFF	; 255
     d28:	8f 4f       	sbci	r24, 0xFF	; 255
     d2a:	9f 4f       	sbci	r25, 0xFF	; 255
     d2c:	f0 68       	ori	r31, 0x80	; 128
     d2e:	3f 2e       	mov	r3, r31
     d30:	2a e0       	ldi	r18, 0x0A	; 10
     d32:	30 e0       	ldi	r19, 0x00	; 0
     d34:	a3 01       	movw	r20, r6
     d36:	33 d1       	rcall	.+614    	; 0xf9e <__ultoa_invert>
     d38:	88 2e       	mov	r8, r24
     d3a:	86 18       	sub	r8, r6
     d3c:	44 c0       	rjmp	.+136    	; 0xdc6 <vfprintf+0x2c6>
     d3e:	85 37       	cpi	r24, 0x75	; 117
     d40:	31 f4       	brne	.+12     	; 0xd4e <vfprintf+0x24e>
     d42:	23 2d       	mov	r18, r3
     d44:	2f 7e       	andi	r18, 0xEF	; 239
     d46:	b2 2e       	mov	r11, r18
     d48:	2a e0       	ldi	r18, 0x0A	; 10
     d4a:	30 e0       	ldi	r19, 0x00	; 0
     d4c:	25 c0       	rjmp	.+74     	; 0xd98 <vfprintf+0x298>
     d4e:	93 2d       	mov	r25, r3
     d50:	99 7f       	andi	r25, 0xF9	; 249
     d52:	b9 2e       	mov	r11, r25
     d54:	8f 36       	cpi	r24, 0x6F	; 111
     d56:	c1 f0       	breq	.+48     	; 0xd88 <vfprintf+0x288>
     d58:	18 f4       	brcc	.+6      	; 0xd60 <vfprintf+0x260>
     d5a:	88 35       	cpi	r24, 0x58	; 88
     d5c:	79 f0       	breq	.+30     	; 0xd7c <vfprintf+0x27c>
     d5e:	ae c0       	rjmp	.+348    	; 0xebc <vfprintf+0x3bc>
     d60:	80 37       	cpi	r24, 0x70	; 112
     d62:	19 f0       	breq	.+6      	; 0xd6a <vfprintf+0x26a>
     d64:	88 37       	cpi	r24, 0x78	; 120
     d66:	21 f0       	breq	.+8      	; 0xd70 <vfprintf+0x270>
     d68:	a9 c0       	rjmp	.+338    	; 0xebc <vfprintf+0x3bc>
     d6a:	e9 2f       	mov	r30, r25
     d6c:	e0 61       	ori	r30, 0x10	; 16
     d6e:	be 2e       	mov	r11, r30
     d70:	b4 fe       	sbrs	r11, 4
     d72:	0d c0       	rjmp	.+26     	; 0xd8e <vfprintf+0x28e>
     d74:	fb 2d       	mov	r31, r11
     d76:	f4 60       	ori	r31, 0x04	; 4
     d78:	bf 2e       	mov	r11, r31
     d7a:	09 c0       	rjmp	.+18     	; 0xd8e <vfprintf+0x28e>
     d7c:	34 fe       	sbrs	r3, 4
     d7e:	0a c0       	rjmp	.+20     	; 0xd94 <vfprintf+0x294>
     d80:	29 2f       	mov	r18, r25
     d82:	26 60       	ori	r18, 0x06	; 6
     d84:	b2 2e       	mov	r11, r18
     d86:	06 c0       	rjmp	.+12     	; 0xd94 <vfprintf+0x294>
     d88:	28 e0       	ldi	r18, 0x08	; 8
     d8a:	30 e0       	ldi	r19, 0x00	; 0
     d8c:	05 c0       	rjmp	.+10     	; 0xd98 <vfprintf+0x298>
     d8e:	20 e1       	ldi	r18, 0x10	; 16
     d90:	30 e0       	ldi	r19, 0x00	; 0
     d92:	02 c0       	rjmp	.+4      	; 0xd98 <vfprintf+0x298>
     d94:	20 e1       	ldi	r18, 0x10	; 16
     d96:	32 e0       	ldi	r19, 0x02	; 2
     d98:	f8 01       	movw	r30, r16
     d9a:	b7 fe       	sbrs	r11, 7
     d9c:	07 c0       	rjmp	.+14     	; 0xdac <vfprintf+0x2ac>
     d9e:	60 81       	ld	r22, Z
     da0:	71 81       	ldd	r23, Z+1	; 0x01
     da2:	82 81       	ldd	r24, Z+2	; 0x02
     da4:	93 81       	ldd	r25, Z+3	; 0x03
     da6:	0c 5f       	subi	r16, 0xFC	; 252
     da8:	1f 4f       	sbci	r17, 0xFF	; 255
     daa:	06 c0       	rjmp	.+12     	; 0xdb8 <vfprintf+0x2b8>
     dac:	60 81       	ld	r22, Z
     dae:	71 81       	ldd	r23, Z+1	; 0x01
     db0:	80 e0       	ldi	r24, 0x00	; 0
     db2:	90 e0       	ldi	r25, 0x00	; 0
     db4:	0e 5f       	subi	r16, 0xFE	; 254
     db6:	1f 4f       	sbci	r17, 0xFF	; 255
     db8:	a3 01       	movw	r20, r6
     dba:	f1 d0       	rcall	.+482    	; 0xf9e <__ultoa_invert>
     dbc:	88 2e       	mov	r8, r24
     dbe:	86 18       	sub	r8, r6
     dc0:	fb 2d       	mov	r31, r11
     dc2:	ff 77       	andi	r31, 0x7F	; 127
     dc4:	3f 2e       	mov	r3, r31
     dc6:	36 fe       	sbrs	r3, 6
     dc8:	0d c0       	rjmp	.+26     	; 0xde4 <vfprintf+0x2e4>
     dca:	23 2d       	mov	r18, r3
     dcc:	2e 7f       	andi	r18, 0xFE	; 254
     dce:	a2 2e       	mov	r10, r18
     dd0:	89 14       	cp	r8, r9
     dd2:	58 f4       	brcc	.+22     	; 0xdea <vfprintf+0x2ea>
     dd4:	34 fe       	sbrs	r3, 4
     dd6:	0b c0       	rjmp	.+22     	; 0xdee <vfprintf+0x2ee>
     dd8:	32 fc       	sbrc	r3, 2
     dda:	09 c0       	rjmp	.+18     	; 0xdee <vfprintf+0x2ee>
     ddc:	83 2d       	mov	r24, r3
     dde:	8e 7e       	andi	r24, 0xEE	; 238
     de0:	a8 2e       	mov	r10, r24
     de2:	05 c0       	rjmp	.+10     	; 0xdee <vfprintf+0x2ee>
     de4:	b8 2c       	mov	r11, r8
     de6:	a3 2c       	mov	r10, r3
     de8:	03 c0       	rjmp	.+6      	; 0xdf0 <vfprintf+0x2f0>
     dea:	b8 2c       	mov	r11, r8
     dec:	01 c0       	rjmp	.+2      	; 0xdf0 <vfprintf+0x2f0>
     dee:	b9 2c       	mov	r11, r9
     df0:	a4 fe       	sbrs	r10, 4
     df2:	0f c0       	rjmp	.+30     	; 0xe12 <vfprintf+0x312>
     df4:	fe 01       	movw	r30, r28
     df6:	e8 0d       	add	r30, r8
     df8:	f1 1d       	adc	r31, r1
     dfa:	80 81       	ld	r24, Z
     dfc:	80 33       	cpi	r24, 0x30	; 48
     dfe:	21 f4       	brne	.+8      	; 0xe08 <vfprintf+0x308>
     e00:	9a 2d       	mov	r25, r10
     e02:	99 7e       	andi	r25, 0xE9	; 233
     e04:	a9 2e       	mov	r10, r25
     e06:	09 c0       	rjmp	.+18     	; 0xe1a <vfprintf+0x31a>
     e08:	a2 fe       	sbrs	r10, 2
     e0a:	06 c0       	rjmp	.+12     	; 0xe18 <vfprintf+0x318>
     e0c:	b3 94       	inc	r11
     e0e:	b3 94       	inc	r11
     e10:	04 c0       	rjmp	.+8      	; 0xe1a <vfprintf+0x31a>
     e12:	8a 2d       	mov	r24, r10
     e14:	86 78       	andi	r24, 0x86	; 134
     e16:	09 f0       	breq	.+2      	; 0xe1a <vfprintf+0x31a>
     e18:	b3 94       	inc	r11
     e1a:	a3 fc       	sbrc	r10, 3
     e1c:	10 c0       	rjmp	.+32     	; 0xe3e <vfprintf+0x33e>
     e1e:	a0 fe       	sbrs	r10, 0
     e20:	06 c0       	rjmp	.+12     	; 0xe2e <vfprintf+0x32e>
     e22:	b2 14       	cp	r11, r2
     e24:	80 f4       	brcc	.+32     	; 0xe46 <vfprintf+0x346>
     e26:	28 0c       	add	r2, r8
     e28:	92 2c       	mov	r9, r2
     e2a:	9b 18       	sub	r9, r11
     e2c:	0d c0       	rjmp	.+26     	; 0xe48 <vfprintf+0x348>
     e2e:	b2 14       	cp	r11, r2
     e30:	58 f4       	brcc	.+22     	; 0xe48 <vfprintf+0x348>
     e32:	b6 01       	movw	r22, r12
     e34:	80 e2       	ldi	r24, 0x20	; 32
     e36:	90 e0       	ldi	r25, 0x00	; 0
     e38:	76 d0       	rcall	.+236    	; 0xf26 <fputc>
     e3a:	b3 94       	inc	r11
     e3c:	f8 cf       	rjmp	.-16     	; 0xe2e <vfprintf+0x32e>
     e3e:	b2 14       	cp	r11, r2
     e40:	18 f4       	brcc	.+6      	; 0xe48 <vfprintf+0x348>
     e42:	2b 18       	sub	r2, r11
     e44:	02 c0       	rjmp	.+4      	; 0xe4a <vfprintf+0x34a>
     e46:	98 2c       	mov	r9, r8
     e48:	21 2c       	mov	r2, r1
     e4a:	a4 fe       	sbrs	r10, 4
     e4c:	0f c0       	rjmp	.+30     	; 0xe6c <vfprintf+0x36c>
     e4e:	b6 01       	movw	r22, r12
     e50:	80 e3       	ldi	r24, 0x30	; 48
     e52:	90 e0       	ldi	r25, 0x00	; 0
     e54:	68 d0       	rcall	.+208    	; 0xf26 <fputc>
     e56:	a2 fe       	sbrs	r10, 2
     e58:	16 c0       	rjmp	.+44     	; 0xe86 <vfprintf+0x386>
     e5a:	a1 fc       	sbrc	r10, 1
     e5c:	03 c0       	rjmp	.+6      	; 0xe64 <vfprintf+0x364>
     e5e:	88 e7       	ldi	r24, 0x78	; 120
     e60:	90 e0       	ldi	r25, 0x00	; 0
     e62:	02 c0       	rjmp	.+4      	; 0xe68 <vfprintf+0x368>
     e64:	88 e5       	ldi	r24, 0x58	; 88
     e66:	90 e0       	ldi	r25, 0x00	; 0
     e68:	b6 01       	movw	r22, r12
     e6a:	0c c0       	rjmp	.+24     	; 0xe84 <vfprintf+0x384>
     e6c:	8a 2d       	mov	r24, r10
     e6e:	86 78       	andi	r24, 0x86	; 134
     e70:	51 f0       	breq	.+20     	; 0xe86 <vfprintf+0x386>
     e72:	a1 fe       	sbrs	r10, 1
     e74:	02 c0       	rjmp	.+4      	; 0xe7a <vfprintf+0x37a>
     e76:	8b e2       	ldi	r24, 0x2B	; 43
     e78:	01 c0       	rjmp	.+2      	; 0xe7c <vfprintf+0x37c>
     e7a:	80 e2       	ldi	r24, 0x20	; 32
     e7c:	a7 fc       	sbrc	r10, 7
     e7e:	8d e2       	ldi	r24, 0x2D	; 45
     e80:	b6 01       	movw	r22, r12
     e82:	90 e0       	ldi	r25, 0x00	; 0
     e84:	50 d0       	rcall	.+160    	; 0xf26 <fputc>
     e86:	89 14       	cp	r8, r9
     e88:	30 f4       	brcc	.+12     	; 0xe96 <vfprintf+0x396>
     e8a:	b6 01       	movw	r22, r12
     e8c:	80 e3       	ldi	r24, 0x30	; 48
     e8e:	90 e0       	ldi	r25, 0x00	; 0
     e90:	4a d0       	rcall	.+148    	; 0xf26 <fputc>
     e92:	9a 94       	dec	r9
     e94:	f8 cf       	rjmp	.-16     	; 0xe86 <vfprintf+0x386>
     e96:	8a 94       	dec	r8
     e98:	f3 01       	movw	r30, r6
     e9a:	e8 0d       	add	r30, r8
     e9c:	f1 1d       	adc	r31, r1
     e9e:	80 81       	ld	r24, Z
     ea0:	b6 01       	movw	r22, r12
     ea2:	90 e0       	ldi	r25, 0x00	; 0
     ea4:	40 d0       	rcall	.+128    	; 0xf26 <fputc>
     ea6:	81 10       	cpse	r8, r1
     ea8:	f6 cf       	rjmp	.-20     	; 0xe96 <vfprintf+0x396>
     eaa:	22 20       	and	r2, r2
     eac:	09 f4       	brne	.+2      	; 0xeb0 <vfprintf+0x3b0>
     eae:	4e ce       	rjmp	.-868    	; 0xb4c <vfprintf+0x4c>
     eb0:	b6 01       	movw	r22, r12
     eb2:	80 e2       	ldi	r24, 0x20	; 32
     eb4:	90 e0       	ldi	r25, 0x00	; 0
     eb6:	37 d0       	rcall	.+110    	; 0xf26 <fputc>
     eb8:	2a 94       	dec	r2
     eba:	f7 cf       	rjmp	.-18     	; 0xeaa <vfprintf+0x3aa>
     ebc:	f6 01       	movw	r30, r12
     ebe:	86 81       	ldd	r24, Z+6	; 0x06
     ec0:	97 81       	ldd	r25, Z+7	; 0x07
     ec2:	02 c0       	rjmp	.+4      	; 0xec8 <vfprintf+0x3c8>
     ec4:	8f ef       	ldi	r24, 0xFF	; 255
     ec6:	9f ef       	ldi	r25, 0xFF	; 255
     ec8:	2b 96       	adiw	r28, 0x0b	; 11
     eca:	0f b6       	in	r0, 0x3f	; 63
     ecc:	f8 94       	cli
     ece:	de bf       	out	0x3e, r29	; 62
     ed0:	0f be       	out	0x3f, r0	; 63
     ed2:	cd bf       	out	0x3d, r28	; 61
     ed4:	df 91       	pop	r29
     ed6:	cf 91       	pop	r28
     ed8:	1f 91       	pop	r17
     eda:	0f 91       	pop	r16
     edc:	ff 90       	pop	r15
     ede:	ef 90       	pop	r14
     ee0:	df 90       	pop	r13
     ee2:	cf 90       	pop	r12
     ee4:	bf 90       	pop	r11
     ee6:	af 90       	pop	r10
     ee8:	9f 90       	pop	r9
     eea:	8f 90       	pop	r8
     eec:	7f 90       	pop	r7
     eee:	6f 90       	pop	r6
     ef0:	5f 90       	pop	r5
     ef2:	4f 90       	pop	r4
     ef4:	3f 90       	pop	r3
     ef6:	2f 90       	pop	r2
     ef8:	08 95       	ret

00000efa <strnlen_P>:
     efa:	fc 01       	movw	r30, r24
     efc:	05 90       	lpm	r0, Z+
     efe:	61 50       	subi	r22, 0x01	; 1
     f00:	70 40       	sbci	r23, 0x00	; 0
     f02:	01 10       	cpse	r0, r1
     f04:	d8 f7       	brcc	.-10     	; 0xefc <strnlen_P+0x2>
     f06:	80 95       	com	r24
     f08:	90 95       	com	r25
     f0a:	8e 0f       	add	r24, r30
     f0c:	9f 1f       	adc	r25, r31
     f0e:	08 95       	ret

00000f10 <strnlen>:
     f10:	fc 01       	movw	r30, r24
     f12:	61 50       	subi	r22, 0x01	; 1
     f14:	70 40       	sbci	r23, 0x00	; 0
     f16:	01 90       	ld	r0, Z+
     f18:	01 10       	cpse	r0, r1
     f1a:	d8 f7       	brcc	.-10     	; 0xf12 <strnlen+0x2>
     f1c:	80 95       	com	r24
     f1e:	90 95       	com	r25
     f20:	8e 0f       	add	r24, r30
     f22:	9f 1f       	adc	r25, r31
     f24:	08 95       	ret

00000f26 <fputc>:
     f26:	0f 93       	push	r16
     f28:	1f 93       	push	r17
     f2a:	cf 93       	push	r28
     f2c:	df 93       	push	r29
     f2e:	fb 01       	movw	r30, r22
     f30:	23 81       	ldd	r18, Z+3	; 0x03
     f32:	21 fd       	sbrc	r18, 1
     f34:	03 c0       	rjmp	.+6      	; 0xf3c <fputc+0x16>
     f36:	8f ef       	ldi	r24, 0xFF	; 255
     f38:	9f ef       	ldi	r25, 0xFF	; 255
     f3a:	2c c0       	rjmp	.+88     	; 0xf94 <fputc+0x6e>
     f3c:	22 ff       	sbrs	r18, 2
     f3e:	16 c0       	rjmp	.+44     	; 0xf6c <fputc+0x46>
     f40:	46 81       	ldd	r20, Z+6	; 0x06
     f42:	57 81       	ldd	r21, Z+7	; 0x07
     f44:	24 81       	ldd	r18, Z+4	; 0x04
     f46:	35 81       	ldd	r19, Z+5	; 0x05
     f48:	42 17       	cp	r20, r18
     f4a:	53 07       	cpc	r21, r19
     f4c:	44 f4       	brge	.+16     	; 0xf5e <fputc+0x38>
     f4e:	a0 81       	ld	r26, Z
     f50:	b1 81       	ldd	r27, Z+1	; 0x01
     f52:	9d 01       	movw	r18, r26
     f54:	2f 5f       	subi	r18, 0xFF	; 255
     f56:	3f 4f       	sbci	r19, 0xFF	; 255
     f58:	31 83       	std	Z+1, r19	; 0x01
     f5a:	20 83       	st	Z, r18
     f5c:	8c 93       	st	X, r24
     f5e:	26 81       	ldd	r18, Z+6	; 0x06
     f60:	37 81       	ldd	r19, Z+7	; 0x07
     f62:	2f 5f       	subi	r18, 0xFF	; 255
     f64:	3f 4f       	sbci	r19, 0xFF	; 255
     f66:	37 83       	std	Z+7, r19	; 0x07
     f68:	26 83       	std	Z+6, r18	; 0x06
     f6a:	14 c0       	rjmp	.+40     	; 0xf94 <fputc+0x6e>
     f6c:	8b 01       	movw	r16, r22
     f6e:	ec 01       	movw	r28, r24
     f70:	fb 01       	movw	r30, r22
     f72:	00 84       	ldd	r0, Z+8	; 0x08
     f74:	f1 85       	ldd	r31, Z+9	; 0x09
     f76:	e0 2d       	mov	r30, r0
     f78:	09 95       	icall
     f7a:	89 2b       	or	r24, r25
     f7c:	e1 f6       	brne	.-72     	; 0xf36 <fputc+0x10>
     f7e:	d8 01       	movw	r26, r16
     f80:	16 96       	adiw	r26, 0x06	; 6
     f82:	8d 91       	ld	r24, X+
     f84:	9c 91       	ld	r25, X
     f86:	17 97       	sbiw	r26, 0x07	; 7
     f88:	01 96       	adiw	r24, 0x01	; 1
     f8a:	17 96       	adiw	r26, 0x07	; 7
     f8c:	9c 93       	st	X, r25
     f8e:	8e 93       	st	-X, r24
     f90:	16 97       	sbiw	r26, 0x06	; 6
     f92:	ce 01       	movw	r24, r28
     f94:	df 91       	pop	r29
     f96:	cf 91       	pop	r28
     f98:	1f 91       	pop	r17
     f9a:	0f 91       	pop	r16
     f9c:	08 95       	ret

00000f9e <__ultoa_invert>:
     f9e:	fa 01       	movw	r30, r20
     fa0:	aa 27       	eor	r26, r26
     fa2:	28 30       	cpi	r18, 0x08	; 8
     fa4:	51 f1       	breq	.+84     	; 0xffa <__ultoa_invert+0x5c>
     fa6:	20 31       	cpi	r18, 0x10	; 16
     fa8:	81 f1       	breq	.+96     	; 0x100a <__ultoa_invert+0x6c>
     faa:	e8 94       	clt
     fac:	6f 93       	push	r22
     fae:	6e 7f       	andi	r22, 0xFE	; 254
     fb0:	6e 5f       	subi	r22, 0xFE	; 254
     fb2:	7f 4f       	sbci	r23, 0xFF	; 255
     fb4:	8f 4f       	sbci	r24, 0xFF	; 255
     fb6:	9f 4f       	sbci	r25, 0xFF	; 255
     fb8:	af 4f       	sbci	r26, 0xFF	; 255
     fba:	b1 e0       	ldi	r27, 0x01	; 1
     fbc:	3e d0       	rcall	.+124    	; 0x103a <__ultoa_invert+0x9c>
     fbe:	b4 e0       	ldi	r27, 0x04	; 4
     fc0:	3c d0       	rcall	.+120    	; 0x103a <__ultoa_invert+0x9c>
     fc2:	67 0f       	add	r22, r23
     fc4:	78 1f       	adc	r23, r24
     fc6:	89 1f       	adc	r24, r25
     fc8:	9a 1f       	adc	r25, r26
     fca:	a1 1d       	adc	r26, r1
     fcc:	68 0f       	add	r22, r24
     fce:	79 1f       	adc	r23, r25
     fd0:	8a 1f       	adc	r24, r26
     fd2:	91 1d       	adc	r25, r1
     fd4:	a1 1d       	adc	r26, r1
     fd6:	6a 0f       	add	r22, r26
     fd8:	71 1d       	adc	r23, r1
     fda:	81 1d       	adc	r24, r1
     fdc:	91 1d       	adc	r25, r1
     fde:	a1 1d       	adc	r26, r1
     fe0:	20 d0       	rcall	.+64     	; 0x1022 <__ultoa_invert+0x84>
     fe2:	09 f4       	brne	.+2      	; 0xfe6 <__ultoa_invert+0x48>
     fe4:	68 94       	set
     fe6:	3f 91       	pop	r19
     fe8:	2a e0       	ldi	r18, 0x0A	; 10
     fea:	26 9f       	mul	r18, r22
     fec:	11 24       	eor	r1, r1
     fee:	30 19       	sub	r19, r0
     ff0:	30 5d       	subi	r19, 0xD0	; 208
     ff2:	31 93       	st	Z+, r19
     ff4:	de f6       	brtc	.-74     	; 0xfac <__ultoa_invert+0xe>
     ff6:	cf 01       	movw	r24, r30
     ff8:	08 95       	ret
     ffa:	46 2f       	mov	r20, r22
     ffc:	47 70       	andi	r20, 0x07	; 7
     ffe:	40 5d       	subi	r20, 0xD0	; 208
    1000:	41 93       	st	Z+, r20
    1002:	b3 e0       	ldi	r27, 0x03	; 3
    1004:	0f d0       	rcall	.+30     	; 0x1024 <__ultoa_invert+0x86>
    1006:	c9 f7       	brne	.-14     	; 0xffa <__ultoa_invert+0x5c>
    1008:	f6 cf       	rjmp	.-20     	; 0xff6 <__ultoa_invert+0x58>
    100a:	46 2f       	mov	r20, r22
    100c:	4f 70       	andi	r20, 0x0F	; 15
    100e:	40 5d       	subi	r20, 0xD0	; 208
    1010:	4a 33       	cpi	r20, 0x3A	; 58
    1012:	18 f0       	brcs	.+6      	; 0x101a <__ultoa_invert+0x7c>
    1014:	49 5d       	subi	r20, 0xD9	; 217
    1016:	31 fd       	sbrc	r19, 1
    1018:	40 52       	subi	r20, 0x20	; 32
    101a:	41 93       	st	Z+, r20
    101c:	02 d0       	rcall	.+4      	; 0x1022 <__ultoa_invert+0x84>
    101e:	a9 f7       	brne	.-22     	; 0x100a <__ultoa_invert+0x6c>
    1020:	ea cf       	rjmp	.-44     	; 0xff6 <__ultoa_invert+0x58>
    1022:	b4 e0       	ldi	r27, 0x04	; 4
    1024:	a6 95       	lsr	r26
    1026:	97 95       	ror	r25
    1028:	87 95       	ror	r24
    102a:	77 95       	ror	r23
    102c:	67 95       	ror	r22
    102e:	ba 95       	dec	r27
    1030:	c9 f7       	brne	.-14     	; 0x1024 <__ultoa_invert+0x86>
    1032:	00 97       	sbiw	r24, 0x00	; 0
    1034:	61 05       	cpc	r22, r1
    1036:	71 05       	cpc	r23, r1
    1038:	08 95       	ret
    103a:	9b 01       	movw	r18, r22
    103c:	ac 01       	movw	r20, r24
    103e:	0a 2e       	mov	r0, r26
    1040:	06 94       	lsr	r0
    1042:	57 95       	ror	r21
    1044:	47 95       	ror	r20
    1046:	37 95       	ror	r19
    1048:	27 95       	ror	r18
    104a:	ba 95       	dec	r27
    104c:	c9 f7       	brne	.-14     	; 0x1040 <__ultoa_invert+0xa2>
    104e:	62 0f       	add	r22, r18
    1050:	73 1f       	adc	r23, r19
    1052:	84 1f       	adc	r24, r20
    1054:	95 1f       	adc	r25, r21
    1056:	a0 1d       	adc	r26, r0
    1058:	08 95       	ret

0000105a <_exit>:
    105a:	f8 94       	cli

0000105c <__stop_program>:
    105c:	ff cf       	rjmp	.-2      	; 0x105c <__stop_program>
